<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[BZOJ1968]]></title>
      <url>/2017/09/25/BZOJ1968/</url>
      <content type="html"><![CDATA[<h1 id="AHOI2005-COMMON-约数研究"><a href="#AHOI2005-COMMON-约数研究" class="headerlink" title="[AHOI2005]COMMON 约数研究"></a><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1968" target="_blank" rel="external">[AHOI2005]COMMON 约数研究</a></h1><p><center> Time Limit: 1 Sec  Memory Limit: 64 MB</center></p>
<h2 id="Description"><a href="#Description" class="headerlink" title=" Description "></a><strong> Description </strong></h2><p>科学家们在 Samuel 星球上的探险得到了丰富的能源储备，这使得空间站中大型计算机 “Samuel II” 的长时间运算成为了可能。由于在去年一年的辛苦工作取得了不错的成绩，小联被允许用 “Samuel II” 进行数学研究。</p>
<p>小联最近在研究和约数有关的问题，他统计每个正数$N$的约数的个数，并以$f(N)$来表示。例如$12$的约数有$1$、$2$、$3$、$4$、$6$、$12$。因此$f(12)=6$。下表给出了一些$f(N)$的取值：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>$n$</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
</tr>
</thead>
<tbody>
<tr>
<td>$f(n)$</td>
<td>1</td>
<td>2</td>
<td>2</td>
<td>3</td>
<td>2</td>
<td>4</td>
</tr>
</tbody>
</table>
</div>
<p>现在小联希望用 “Samuel II” 来统计$f(1)$到$f(n)$的累加和$M$。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title=" Input "></a><strong> Input </strong></h2><p>只有一行一个整数$N$（$0 &lt; N &lt; 1000000$）。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title=" Output "></a><strong> Output </strong></h2><p>只有一行输出，为整数$M$，即$f(1)$到$f(N)$的累加和。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title=" Sample Input "></a><strong> Sample Input </strong></h2><p>3</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title=" Sample Output "></a><strong> Sample Output </strong></h2><p>5</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><p>对于$i$，它会成为$i$,$i \times 2$,…,$i \times (n / i)$的因子，它对答案的贡献为$n / i$。</p>
<h2 id="Standard"><a href="#Standard" class="headerlink" title=" Standard "></a><strong> Standard </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;cstring&gt;

using namespace std;

int n, sum = 0;

int main() {
    scanf(&quot;%d&quot;, &amp;n);
    for (int i = 1; i &lt;= n; ++i)
        sum += n / i;
    printf(&quot;%d\n&quot;, sum);
    return 0;
}
</code></pre>
]]></content>
      
        <categories>
            
            <category> BZOJ </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BZOJ2463]]></title>
      <url>/2017/09/23/BZOJ2463/</url>
      <content type="html"><![CDATA[<h1 id="2463-中山市选2009-谁能赢呢？"><a href="#2463-中山市选2009-谁能赢呢？" class="headerlink" title="2463: [中山市选2009]谁能赢呢？"></a><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2463" target="_blank" rel="external">2463: [中山市选2009]谁能赢呢？</a></h1><p><center> Time Limit: 10 Sec  Memory Limit: 128 MB</center></p>
<h2 id="Description"><a href="#Description" class="headerlink" title=" Description "></a><strong> Description </strong></h2><p>小明和小红经常玩一个博弈游戏。给定一个$n \times n$的棋盘，一个石头被放在棋盘的左上角。他们轮流移动石头。每一回合，选手只能把石头向上，下，左，右四个方向移动一格，并且要求移动到的格子之前不能被访问过。谁不能移动石头了就算输。假如小明先移动石头，而且两个选手都以最优策略走步，问最后谁能赢？</p>
<h2 id="Input"><a href="#Input" class="headerlink" title=" Input "></a><strong> Input </strong></h2><p>输入文件有多组数据。</p>
<p>输入第一行包含一个整数$n$，表示棋盘的规模。</p>
<p>当输入$n$为$0$时，表示输入结束。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title=" Output "></a><strong> Output </strong></h2><p>对于每组数据，如果小明最后能赢，则输出 “Alice”, 否则输出 “Bob”, 每一组答案独占一行。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title=" Sample Input "></a><strong> Sample Input </strong></h2><p>2<br>0</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title=" Sample Output "></a><strong> Sample Output </strong></h2><p>Alice</p>
<h2 id="HINT"><a href="#HINT" class="headerlink" title=" HINT "></a><strong> HINT </strong></h2><p>对于所有的数据，保证$1 &lt;= n &lt;= 10000$。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><p>当$n$为偶数，棋盘一定能被$1 \times 2$的骨牌覆盖，所以我们先对棋盘进行覆盖，Alice 移动的每一步为原位置所在骨牌的另一块，Bob 则必须选择新的一块骨牌，所以最后一定是 Bob 找不到一块新的骨牌。Alice 必胜。</p>
<p>当$n$为奇数，棋盘上除去起点的点一定能被$1 \times 2$的骨牌覆盖，所以我们先对棋盘进行覆盖，Alice 每次进入一块新的骨牌，Bob 移动的每一步为原位置所在骨牌的另一块，所以最后一定是 Alice 找不到一块新的骨牌。Bob 必胜。</p>
<h2 id="Standard"><a href="#Standard" class="headerlink" title=" Standard "></a><strong> Standard </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;cstring&gt;

using namespace std;

int n;

int main() {
    while (scanf(&quot;%d&quot;, &amp;n) == 1 &amp;&amp; n) {
        if (n &amp; 1) puts(&quot;Bob&quot;);
        else puts(&quot;Alice&quot;);
    }
    return 0;
}
</code></pre>
]]></content>
      
        <categories>
            
            <category> BZOJ </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博弈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World!]]></title>
      <url>/2017/09/23/Hello%20World!/</url>
      <content type="html"><![CDATA[<p>这是一篇有关 <strong><em> OI </em></strong> 的博客。</p>
<pre><code class="lang-cpp">#include &lt;iostream&gt;
#include &lt;cstdio&gt;
#include &lt;cstring&gt;

using namespace std;

int main() {
    puts(&quot;Hello World!&quot;);
    return 0;
}
</code></pre>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[About]]></title>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>QQ：1749046292 &amp;&amp; 2445613176</p>
<p><a href="https://www.luogu.org/space/show?uid=20593" target="_blank" rel="external">Luogu</a></p>
<p><a href="http://www.lydsy.com/JudgeOnline/userinfo.php?user=qxj" target="_blank" rel="external">Lydsy</a></p>
<p><a href="http://codeforces.com/profile/qxj123" target="_blank" rel="external">CodeForces</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gallery]]></title>
      <url>/gallery/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Links]]></title>
      <url>/links/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Timeline]]></title>
      <url>/timeline/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[Tags]]></title>
      <url>/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
