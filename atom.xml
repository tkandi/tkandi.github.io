<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tkandi&#39;s blog</title>
  
  <subtitle>For OI</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tkandi.github.io/"/>
  <updated>2017-10-18T08:35:13.891Z</updated>
  <id>http://tkandi.github.io/</id>
  
  <author>
    <name>tkandi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BZOJ题目列表</title>
    <link href="http://tkandi.github.io/2017/10/18/BZOJ%E9%A2%98%E7%9B%AE%E5%88%97%E8%A1%A8/"/>
    <id>http://tkandi.github.io/2017/10/18/BZOJ题目列表/</id>
    <published>2017-10-18T08:00:00.000Z</published>
    <updated>2017-10-18T08:35:13.891Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习一天可做"><a href="#学习一天可做" class="headerlink" title="学习一天可做"></a>学习一天可做</h3><div class="table-container"><table><thead><tr><th>题号</th><th>算法</th><th>思想难度</th><th>实现难度</th><th>总难度</th><th>推荐指数</th></tr></thead><tbody><tr><td>1214</td><td>Ruby</td><td>0</td><td>0</td><td>0</td><td>10</td></tr><tr><td>3816</td><td>Ruby</td><td>0</td><td>0</td><td>0</td><td>10</td></tr><tr><td>1000</td><td>可持久化动态仙人掌剖分</td><td>1</td><td>1</td><td>2</td><td>10</td></tr><tr><td>2462</td><td>输出10个1</td><td>6</td><td>3</td><td>9</td><td>1</td></tr><tr><td>2463</td><td>小学奥数</td><td>10</td><td>2</td><td>12</td><td>2</td></tr><tr><td>1192</td><td>找规律/二分图</td><td>9</td><td>5</td><td>14</td><td>9</td></tr></tbody></table></div><p><br><br></p><h3 id="普及组难度"><a href="#普及组难度" class="headerlink" title="普及组难度"></a>普及组难度</h3><div class="table-container"><table><thead><tr><th>题号</th><th>算法</th><th>思想难度</th><th>实现难度</th><th>总难度</th><th>推荐指数</th></tr></thead><tbody><tr><td>2659</td><td>数学</td><td>20</td><td>7</td><td>27</td><td>2</td></tr><tr><td>1968</td><td>枚举</td><td>15</td><td>13</td><td>28</td><td>2</td></tr><tr><td>2761</td><td>去重</td><td>12</td><td>18</td><td>30</td><td>6</td></tr><tr><td>3767</td><td>高精度A+B</td><td>10</td><td>20</td><td>30</td><td>2</td></tr><tr><td>1432</td><td>找规律</td><td>27</td><td>5</td><td>32</td><td>3</td></tr><tr><td>3098</td><td>随机卡HASH</td><td>23</td><td>10</td><td>33</td><td>2</td></tr><tr><td>1800</td><td>统计</td><td>20</td><td>16</td><td>36</td><td>3</td></tr><tr><td>1218</td><td>枚举</td><td>20</td><td>17</td><td>37</td><td>2</td></tr><tr><td>4001</td><td>找规律</td><td>28</td><td>9</td><td>37</td><td>3</td></tr><tr><td>2760</td><td>字符串处理</td><td>12</td><td>26</td><td>38</td><td>1</td></tr><tr><td>1088</td><td>DP/判断</td><td>22</td><td>17</td><td>39</td><td>6</td></tr><tr><td>1034</td><td>贪心</td><td>24</td><td>16</td><td>40</td><td>6</td></tr><tr><td>1207</td><td>DP</td><td>23</td><td>17</td><td>40</td><td>2</td></tr><tr><td>2748</td><td>DP</td><td>21</td><td>19</td><td>40</td><td>4</td></tr><tr><td>4302</td><td>分类讨论</td><td>29</td><td>11</td><td>40</td><td></td></tr><tr><td>1083</td><td>最小生成树</td><td>17</td><td>25</td><td>42</td><td>9</td></tr><tr><td>2563</td><td>转换后排序</td><td>27</td><td>15</td><td>42</td><td>7</td></tr><tr><td>3097</td><td>构造卡HASH</td><td>27</td><td>15</td><td>42</td><td>2</td></tr><tr><td>1022</td><td>简单博弈</td><td>30</td><td>13</td><td>43</td><td>3</td></tr><tr><td>2465</td><td>贪心</td><td>25</td><td>20</td><td>45</td><td>4</td></tr><tr><td>2122</td><td>暴力</td><td>28</td><td>18</td><td>46</td><td>2</td></tr><tr><td>1197</td><td>DP</td><td>31</td><td>19</td><td>50</td><td>2</td></tr><tr><td>1295</td><td>搜索</td><td>20</td><td>30</td><td>50</td><td>5</td></tr><tr><td>1821</td><td>最小生成树</td><td>25</td><td>25</td><td>50</td><td>4</td></tr><tr><td>2134</td><td>期望DP</td><td>30</td><td>20</td><td>50</td><td>4</td></tr></tbody></table></div><p><br><br></p><h3 id="提高组难度"><a href="#提高组难度" class="headerlink" title="提高组难度"></a>提高组难度</h3><div class="table-container"><table><thead><tr><th>题号</th><th>算法</th><th>思想难度</th><th>实现难度</th><th>总难度</th><th>推荐指数</th></tr></thead><tbody><tr><td>1876</td><td>高精求GCD</td><td>18</td><td>33</td><td>51</td><td>2</td></tr><tr><td>2173</td><td>找规律</td><td>37</td><td>14</td><td>51</td><td>3</td></tr><tr><td>2208</td><td>暴力</td><td>23</td><td>28</td><td>51</td><td>2</td></tr><tr><td>1258</td><td>找规律</td><td>33</td><td>19</td><td>52</td><td>2</td></tr><tr><td>2005</td><td>数学</td><td>30</td><td>22</td><td>52</td><td>6</td></tr><tr><td>2429</td><td>最小生成树</td><td>23</td><td>29</td><td>52</td><td>3</td></tr><tr><td>2464</td><td>最短路</td><td>21</td><td>31</td><td>52</td><td>2</td></tr><tr><td>1028</td><td>枚举</td><td>26</td><td>27</td><td>53</td><td>4</td></tr><tr><td>2222</td><td>打表+手算</td><td>39</td><td>14</td><td>53</td><td>1</td></tr><tr><td>2456</td><td>脑补</td><td>34</td><td>19</td><td>53</td><td>6</td></tr><tr><td>4300</td><td>DP+单调转移</td><td>30</td><td>23</td><td>53</td><td></td></tr><tr><td>1008</td><td>数学分析+快速幂</td><td>27</td><td>27</td><td>54</td><td>7</td></tr><tr><td>1413</td><td>博弈</td><td>39</td><td>15</td><td>54</td><td>4</td></tr><tr><td>4368</td><td>贪心</td><td>31</td><td>23</td><td>54</td><td></td></tr><tr><td>1012</td><td>树状数组/线段树/RMQ</td><td>24</td><td>31</td><td>55</td><td>3</td></tr><tr><td>1228</td><td>博弈论SG函数</td><td>40</td><td>15</td><td>55</td><td>3</td></tr><tr><td>1489</td><td>DP</td><td>32</td><td>23</td><td>55</td><td>5</td></tr><tr><td>1607</td><td>线性筛因数</td><td>27</td><td>28</td><td>55</td><td>6</td></tr><tr><td>1050</td><td>并查集</td><td>27</td><td>29</td><td>56</td><td>8</td></tr><tr><td>1053</td><td>搜索</td><td>27</td><td>29</td><td>56</td><td>4</td></tr><tr><td>1261</td><td>DP</td><td>31</td><td>25</td><td>56</td><td>6</td></tr><tr><td>1303</td><td>前缀和</td><td>33</td><td>23</td><td>56</td><td>8</td></tr><tr><td>1569</td><td>DP</td><td>28</td><td>28</td><td>56</td><td>4</td></tr><tr><td>1970</td><td>暴力+高精</td><td>25</td><td>31</td><td>56</td><td>1</td></tr><tr><td>2241</td><td>暴力</td><td>28</td><td>28</td><td>56</td><td>2</td></tr><tr><td>1002</td><td>递推+高精度</td><td>32</td><td>25</td><td>57</td><td>2</td></tr><tr><td>1024</td><td>搜索</td><td>29</td><td>28</td><td>57</td><td>4</td></tr><tr><td>1054</td><td>BFS</td><td>27</td><td>30</td><td>57</td><td>5</td></tr><tr><td>1059</td><td>二分图</td><td>27</td><td>30</td><td>57</td><td>9</td></tr><tr><td>1191</td><td>二分图</td><td>27</td><td>30</td><td>57</td><td>9</td></tr><tr><td>1260</td><td>DP</td><td>32</td><td>25</td><td>57</td><td>6</td></tr><tr><td>1263</td><td>贪心+高精度</td><td>29</td><td>28</td><td>57</td><td>5</td></tr><tr><td>1816</td><td>二分</td><td>31</td><td>26</td><td>57</td><td>6</td></tr><tr><td>1854</td><td>二分图</td><td>27</td><td>30</td><td>57</td><td>6</td></tr><tr><td>1967</td><td>Floodfill最短路/贪心Cheat</td><td>42</td><td>15</td><td>57</td><td>1</td></tr><tr><td>3505</td><td>数学</td><td>29</td><td>28</td><td>57</td><td>4</td></tr><tr><td>4247</td><td>背包DP</td><td>31</td><td>26</td><td>57</td><td></td></tr><tr><td>1206</td><td>堆</td><td>27</td><td>31</td><td>58</td><td>3</td></tr><tr><td>1296</td><td>DP</td><td>33</td><td>25</td><td>58</td><td>6</td></tr><tr><td>1485</td><td>卡特兰数</td><td>29</td><td>29</td><td>58</td><td>3</td></tr><tr><td>1856</td><td>卡特兰数</td><td>29</td><td>29</td><td>58</td><td>3</td></tr><tr><td>2457</td><td>贪心</td><td>33</td><td>25</td><td>58</td><td>5</td></tr><tr><td>2467</td><td>找规律</td><td>37</td><td>21</td><td>58</td><td>3</td></tr><tr><td>2764</td><td>DP+高精度</td><td>26</td><td>32</td><td>58</td><td>2</td></tr><tr><td>1045&amp;3293</td><td>数学求中位数</td><td>33</td><td>25</td><td>58</td><td>5</td></tr><tr><td>1013</td><td>高斯消元</td><td>28</td><td>31</td><td>59</td><td>4</td></tr><tr><td>1025</td><td>DP</td><td>32</td><td>27</td><td>59</td><td>5</td></tr><tr><td>1078</td><td>模拟斜堆</td><td>31</td><td>28</td><td>59</td><td>4</td></tr><tr><td>1265</td><td>高精度</td><td>29</td><td>30</td><td>59</td><td>2</td></tr><tr><td>1433</td><td>二分图</td><td>29</td><td>30</td><td>59</td><td>4</td></tr><tr><td>1505</td><td>贪心</td><td>35</td><td>24</td><td>59</td><td>5</td></tr><tr><td>2048</td><td>数学</td><td>39</td><td>20</td><td>59</td><td>3</td></tr><tr><td>2156</td><td>最短路</td><td>29</td><td>30</td><td>59</td><td>2</td></tr><tr><td>3108</td><td>乱搞</td><td>36</td><td>23</td><td>59</td><td>4</td></tr><tr><td>3214</td><td>字符串处理</td><td>24</td><td>35</td><td>59</td><td>2</td></tr><tr><td>3668</td><td>进制乱搞</td><td>27</td><td>32</td><td>59</td><td>6</td></tr><tr><td>4195</td><td>离散化+并查集</td><td>28</td><td>31</td><td>59</td><td>4</td></tr><tr><td>1019</td><td>DP</td><td>35</td><td>25</td><td>60</td><td>3</td></tr><tr><td>1055</td><td>DP</td><td>33</td><td>27</td><td>60</td><td>6</td></tr><tr><td>1452</td><td>三维树状数组</td><td>27</td><td>33</td><td>60</td><td>3</td></tr><tr><td>1509</td><td>树上最长链</td><td>30</td><td>30</td><td>60</td><td>6</td></tr><tr><td>1867</td><td>DP</td><td>32</td><td>28</td><td>60</td><td>5</td></tr><tr><td>1965</td><td>快速幂+快速乘</td><td>30</td><td>30</td><td>60</td><td>7</td></tr><tr><td>2435</td><td>BFS</td><td>30</td><td>30</td><td>60</td><td>5</td></tr><tr><td>2705</td><td>欧拉函数</td><td>30</td><td>30</td><td>60</td><td>6</td></tr><tr><td>2783</td><td>树上倍增</td><td>30</td><td>30</td><td>60</td><td>6</td></tr><tr><td>3210</td><td>坐标转化</td><td>33</td><td>27</td><td>60</td><td>5</td></tr><tr><td>1015</td><td>并查集</td><td>32</td><td>29</td><td>61</td><td>8</td></tr><tr><td>1036</td><td>树链剖分/动态树</td><td>26</td><td>35</td><td>61</td><td>10</td></tr><tr><td>1047</td><td>二维RMQ</td><td>27</td><td>34</td><td>61</td><td>5</td></tr><tr><td>1084</td><td>DP</td><td>33</td><td>28</td><td>61</td><td>7</td></tr><tr><td>1213</td><td>二分+高精</td><td>25</td><td>36</td><td>61</td><td>1</td></tr><tr><td>3106</td><td>DP</td><td>31</td><td>30</td><td>61</td><td>5</td></tr><tr><td>3142</td><td>数学</td><td>36</td><td>25</td><td>61</td><td>5</td></tr><tr><td>3613</td><td>二分+贪心</td><td>33</td><td>28</td><td>61</td><td>4</td></tr><tr><td>1026</td><td>数位DP</td><td>31</td><td>31</td><td>62</td><td>6</td></tr><tr><td>1079</td><td>记忆化搜索</td><td>31</td><td>31</td><td>62</td><td>2</td></tr><tr><td>1081</td><td>模拟</td><td>32</td><td>30</td><td>62</td><td>4</td></tr><tr><td>1293</td><td>单调队列</td><td>31</td><td>31</td><td>62</td><td>7</td></tr><tr><td>1407</td><td>扩展欧几里得</td><td>32</td><td>30</td><td>62</td><td>5</td></tr><tr><td>1588</td><td>Splay/Set</td><td>27</td><td>35</td><td>62</td><td>4</td></tr><tr><td>1811</td><td>差分解方程</td><td>36</td><td>26</td><td>62</td><td>6</td></tr><tr><td>1879</td><td>状压DP</td><td>33</td><td>29</td><td>62</td><td>6</td></tr><tr><td>2190</td><td>线性筛欧拉函数</td><td>31</td><td>31</td><td>62</td><td>7</td></tr><tr><td>2426</td><td>贪心</td><td>33</td><td>29</td><td>62</td><td>4</td></tr><tr><td>2656</td><td>高精度</td><td>31</td><td>31</td><td>62</td><td>2</td></tr><tr><td>2751</td><td>快速幂+快速乘</td><td>31</td><td>31</td><td>62</td><td>6</td></tr><tr><td>3191</td><td>DP</td><td>36</td><td>26</td><td>62</td><td>6</td></tr><tr><td>3517</td><td>解方程</td><td>40</td><td>22</td><td>62</td><td>6</td></tr><tr><td>4233</td><td>递推</td><td>40</td><td>22</td><td>62</td><td>4</td></tr><tr><td>1031</td><td>后缀数组</td><td>27</td><td>36</td><td>63</td><td>6</td></tr><tr><td>1044</td><td>二分+DP</td><td>33</td><td>30</td><td>63</td><td>6</td></tr><tr><td>1076</td><td>期望DP</td><td>34</td><td>29</td><td>63</td><td>6</td></tr><tr><td>1089</td><td>递推+高精度</td><td>32</td><td>31</td><td>63</td><td>2</td></tr><tr><td>1103</td><td>树链剖分</td><td>27</td><td>36</td><td>63</td><td>6</td></tr><tr><td>1198</td><td>搜索</td><td>31</td><td>32</td><td>63</td><td>2</td></tr><tr><td>1208</td><td>Splay/Set</td><td>29</td><td>34</td><td>63</td><td>3</td></tr><tr><td>1216</td><td>堆</td><td>27</td><td>36</td><td>63</td><td>5</td></tr><tr><td>1224</td><td>DFS+剪枝</td><td>35</td><td>28</td><td>63</td><td>3</td></tr><tr><td>1257</td><td>数学</td><td>36</td><td>27</td><td>63</td><td>7</td></tr><tr><td>2150</td><td>二分图</td><td>32</td><td>31</td><td>63</td><td>8</td></tr><tr><td>2172</td><td>分类讨论+暴力</td><td>35</td><td>28</td><td>63</td><td>2</td></tr><tr><td>3155</td><td>树状数组</td><td>31</td><td>32</td><td>63</td><td>6</td></tr><tr><td>4008</td><td>期望DP</td><td>33</td><td>30</td><td>63</td><td>6</td></tr><tr><td>4318</td><td>期望</td><td>40</td><td>23</td><td>63</td><td></td></tr><tr><td>4403</td><td>卢卡斯</td><td>33</td><td>30</td><td>63</td><td></td></tr><tr><td>1269&amp;1507</td><td>Splay/STL</td><td>28</td><td>35</td><td>63</td><td>3</td></tr><tr><td>1416&amp;1498</td><td>高精度算概率</td><td>31</td><td>32</td><td>63</td><td>4</td></tr><tr><td>1010</td><td>DP单调性/斜率优化</td><td>32</td><td>32</td><td>64</td><td>8</td></tr><tr><td>1046</td><td>DP+贪心</td><td>34</td><td>30</td><td>64</td><td>5</td></tr><tr><td>1092</td><td>模拟</td><td>34</td><td>30</td><td>64</td><td>4</td></tr><tr><td>1259</td><td>打表</td><td>44</td><td>20</td><td>64</td><td>1</td></tr><tr><td>1304</td><td>树形DP</td><td>33</td><td>31</td><td>64</td><td>6</td></tr><tr><td>1406</td><td>数学</td><td>36</td><td>28</td><td>64</td><td>5</td></tr><tr><td>1820</td><td>DP</td><td>35</td><td>29</td><td>64</td><td>7</td></tr><tr><td>1996</td><td>DP</td><td>36</td><td>28</td><td>64</td><td>6</td></tr><tr><td>2153</td><td>DP斜率优化</td><td>32</td><td>32</td><td>64</td><td>5</td></tr><tr><td>2302</td><td>DP+组合数递推</td><td>35</td><td>29</td><td>64</td><td>6</td></tr><tr><td>2328</td><td>贪心</td><td>35</td><td>29</td><td>64</td><td>5</td></tr><tr><td>2338</td><td>计算几何+排序</td><td>32</td><td>32</td><td>64</td><td>6</td></tr><tr><td>2600</td><td>二分/单调性</td><td>34</td><td>30</td><td>64</td><td>6</td></tr><tr><td>2660</td><td>DP</td><td>32</td><td>32</td><td>64</td><td>5</td></tr><tr><td>2765</td><td>解方程</td><td>32</td><td>32</td><td>64</td><td>5</td></tr><tr><td>2824</td><td>搜索</td><td>34</td><td>30</td><td>64</td><td>2</td></tr><tr><td>2875</td><td>矩阵乘法</td><td>31</td><td>33</td><td>64</td><td>7</td></tr><tr><td>3175</td><td>二分图</td><td>33</td><td>31</td><td>64</td><td>9</td></tr><tr><td>3208</td><td>记忆化搜索</td><td>32</td><td>32</td><td>64</td><td>4</td></tr><tr><td>3223</td><td>Splay翻转</td><td>27</td><td>37</td><td>64</td><td>7</td></tr><tr><td>3224</td><td>Splay</td><td>26</td><td>38</td><td>64</td><td>8</td></tr><tr><td>3227</td><td>DP+打表</td><td>34</td><td>30</td><td>64</td><td>2</td></tr><tr><td>3288</td><td>线性筛+欧拉函数</td><td>32</td><td>32</td><td>64</td><td>6</td></tr><tr><td>3437</td><td>DP斜率优化</td><td>32</td><td>32</td><td>64</td><td>7</td></tr><tr><td>3444</td><td>数学</td><td>34</td><td>30</td><td>64</td><td>4</td></tr><tr><td>3612</td><td>DP</td><td>37</td><td>27</td><td>64</td><td>5</td></tr><tr><td>4321</td><td>DP</td><td>40</td><td>24</td><td>64</td><td></td></tr><tr><td>4401</td><td>枚举约数+树上统计</td><td>35</td><td>29</td><td>64</td><td></td></tr><tr><td>1007</td><td>单调栈</td><td>33</td><td>32</td><td>65</td><td>8</td></tr><tr><td>1048</td><td>记忆化搜索</td><td>34</td><td>31</td><td>65</td><td>6</td></tr><tr><td>1051</td><td>tarjan</td><td>30</td><td>35</td><td>65</td><td>5</td></tr><tr><td>1058</td><td>Splay/Set</td><td>29</td><td>36</td><td>65</td><td>4</td></tr><tr><td>1068</td><td>记忆化搜索</td><td>35</td><td>30</td><td>65</td><td>7</td></tr><tr><td>1087</td><td>状压DP</td><td>33</td><td>32</td><td>65</td><td>6</td></tr><tr><td>1202</td><td>并查集</td><td>33</td><td>32</td><td>65</td><td>8</td></tr><tr><td>1220</td><td>数学+高精度</td><td>34</td><td>31</td><td>65</td><td>2</td></tr><tr><td>1237</td><td>DP</td><td>39</td><td>26</td><td>65</td><td>6</td></tr><tr><td>1491</td><td>Floyd</td><td>33</td><td>32</td><td>65</td><td>7</td></tr><tr><td>1560</td><td>DP小优化</td><td>36</td><td>29</td><td>65</td><td>7</td></tr><tr><td>1801</td><td>DP</td><td>34</td><td>31</td><td>65</td><td>7</td></tr><tr><td>1864</td><td>树形DP</td><td>33</td><td>32</td><td>65</td><td>6</td></tr><tr><td>1899</td><td>DP</td><td>35</td><td>30</td><td>65</td><td>6</td></tr><tr><td>1911</td><td>DP斜率优化</td><td>32</td><td>33</td><td>65</td><td>8</td></tr><tr><td>1912</td><td>树上最长链</td><td>34</td><td>31</td><td>65</td><td>6</td></tr><tr><td>1925</td><td>DP</td><td>35</td><td>30</td><td>65</td><td>7</td></tr><tr><td>1966</td><td>DP</td><td>35</td><td>30</td><td>65</td><td>4</td></tr><tr><td>2049</td><td>LCT</td><td>27</td><td>38</td><td>65</td><td>7</td></tr><tr><td>2186</td><td>数学</td><td>32</td><td>33</td><td>65</td><td>7</td></tr><tr><td>2242</td><td>快速幂+逆元+BSGS</td><td>29</td><td>36</td><td>65</td><td>7</td></tr><tr><td>2335</td><td>分类讨论</td><td>39</td><td>26</td><td>65</td><td>3</td></tr><tr><td>2423</td><td>DP</td><td>36</td><td>29</td><td>65</td><td>6</td></tr><tr><td>2431</td><td>DP</td><td>35</td><td>30</td><td>65</td><td>6</td></tr><tr><td>2565</td><td>Manacher</td><td>33</td><td>32</td><td>65</td><td>7</td></tr><tr><td>2729</td><td>组合计数高精度</td><td>35</td><td>30</td><td>65</td><td>5</td></tr><tr><td>2822</td><td>卡特兰数+高精度</td><td>33</td><td>32</td><td>65</td><td>2</td></tr><tr><td>3156</td><td>DP斜率优化</td><td>32</td><td>33</td><td>65</td><td>6</td></tr><tr><td>3173</td><td>树状数组+倒求顺序</td><td>34</td><td>31</td><td>65</td><td>6</td></tr><tr><td>3190</td><td>单调栈</td><td>33</td><td>32</td><td>65</td><td>8</td></tr><tr><td>3212</td><td>线段树区间操作</td><td>27</td><td>38</td><td>65</td><td>9</td></tr><tr><td>3506</td><td>Splay</td><td>28</td><td>37</td><td>65</td><td>6</td></tr><tr><td>3609</td><td>博弈</td><td>40</td><td>25</td><td>65</td><td>4</td></tr><tr><td>3631</td><td>树链剖分</td><td>28</td><td>37</td><td>65</td><td>6</td></tr><tr><td>3643</td><td>暴力</td><td>33</td><td>32</td><td>65</td><td>4</td></tr><tr><td>4325</td><td>暴力</td><td>26</td><td>39</td><td>65</td><td></td></tr><tr><td>4385</td><td>单调队列</td><td>31</td><td>34</td><td>65</td><td></td></tr><tr><td>1787&amp;1832</td><td>LCA</td><td>31</td><td>34</td><td>65</td><td>6</td></tr><tr><td>1789&amp;1830</td><td>暴力</td><td>34</td><td>31</td><td>65</td><td>5</td></tr></tbody></table></div><p><br><br></p><h3 id="弱省省选-NOI-难度"><a href="#弱省省选-NOI-难度" class="headerlink" title="弱省省选(NOI)难度"></a>弱省省选(NOI)难度</h3><div class="table-container"><table><thead><tr><th>题号</th><th>算法</th><th>思想难度</th><th>实现难度</th><th>总难度</th><th>推荐指数</th></tr></thead><tbody><tr><td>1003</td><td>DP+最短路</td><td>33</td><td>33</td><td>66</td><td>7</td></tr><tr><td>1029</td><td>贪心+堆</td><td>34</td><td>32</td><td>66</td><td>7</td></tr><tr><td>1032</td><td>错误DP</td><td>39</td><td>27</td><td>66</td><td>1</td></tr><tr><td>1037</td><td>DP</td><td>38</td><td>28</td><td>66</td><td>7</td></tr><tr><td>1057</td><td>DP悬线法</td><td>33</td><td>33</td><td>66</td><td>7</td></tr><tr><td>1060</td><td>树形DP</td><td>33</td><td>33</td><td>66</td><td>6</td></tr><tr><td>1086</td><td>树上DFS分块</td><td>33</td><td>33</td><td>66</td><td>2</td></tr><tr><td>1096</td><td>DP斜率优化</td><td>33</td><td>33</td><td>66</td><td>8</td></tr><tr><td>1149</td><td>DFS</td><td>34</td><td>32</td><td>66</td><td>6</td></tr><tr><td>1193</td><td>贪心+暴力</td><td>36</td><td>30</td><td>66</td><td>2</td></tr><tr><td>1196</td><td>二分+最小生成树</td><td>34</td><td>32</td><td>66</td><td>7</td></tr><tr><td>1212</td><td>Trie+DP</td><td>33</td><td>33</td><td>66</td><td>3</td></tr><tr><td>1222</td><td>DP</td><td>39</td><td>27</td><td>66</td><td>6</td></tr><tr><td>1806</td><td>DP</td><td>35</td><td>31</td><td>66</td><td>6</td></tr><tr><td>1819</td><td>暴力+字典树</td><td>32</td><td>34</td><td>66</td><td>2</td></tr><tr><td>1861</td><td>Splay</td><td>29</td><td>37</td><td>66</td><td>7</td></tr><tr><td>1932</td><td>STL</td><td>30</td><td>36</td><td>66</td><td>2</td></tr><tr><td>2120</td><td>暴力</td><td>38</td><td>28</td><td>66</td><td>2</td></tr><tr><td>2155</td><td>高精递推</td><td>39</td><td>27</td><td>66</td><td>4</td></tr><tr><td>2299</td><td>裴蜀定理</td><td>39</td><td>27</td><td>66</td><td>4</td></tr><tr><td>2330</td><td>差分约束</td><td>33</td><td>33</td><td>66</td><td>7</td></tr><tr><td>2461</td><td>DP</td><td>35</td><td>31</td><td>66</td><td>4</td></tr><tr><td>2466</td><td>树形DP</td><td>34</td><td>32</td><td>66</td><td>3</td></tr><tr><td>2657</td><td>构图+树上最长链</td><td>33</td><td>33</td><td>66</td><td>6</td></tr><tr><td>2762</td><td>树状数组</td><td>32</td><td>34</td><td>66</td><td>2</td></tr><tr><td>2819</td><td>树剖博弈</td><td>28</td><td>38</td><td>66</td><td>5</td></tr><tr><td>3170</td><td>曼哈顿距离</td><td>36</td><td>30</td><td>66</td><td>6</td></tr><tr><td>3172</td><td>AC自动机</td><td>30</td><td>36</td><td>66</td><td>9</td></tr><tr><td>3174</td><td>贪心+DP</td><td>36</td><td>30</td><td>66</td><td>6</td></tr><tr><td>3192</td><td>树状数组</td><td>34</td><td>32</td><td>66</td><td>5</td></tr><tr><td>3209</td><td>数位DP</td><td>34</td><td>32</td><td>66</td><td>5</td></tr><tr><td>3573</td><td>树形DP</td><td>33</td><td>33</td><td>66</td><td>4</td></tr><tr><td>3823</td><td>递推统计</td><td>35</td><td>31</td><td>66</td><td>4</td></tr><tr><td>3997</td><td>DP</td><td>37</td><td>29</td><td>66</td><td>5</td></tr><tr><td>1042</td><td>背包DP+容斥原理</td><td>35</td><td>32</td><td>67</td><td>7</td></tr><tr><td>1072</td><td>状压DP</td><td>35</td><td>32</td><td>67</td><td>6</td></tr><tr><td>1082</td><td>二分+搜索判断</td><td>34</td><td>33</td><td>67</td><td>6</td></tr><tr><td>1090</td><td>区间DP</td><td>35</td><td>32</td><td>67</td><td>7</td></tr><tr><td>1225</td><td>搜索+剪枝+高精</td><td>33</td><td>34</td><td>67</td><td>2</td></tr><tr><td>1277</td><td>DP</td><td>36</td><td>31</td><td>67</td><td>5</td></tr><tr><td>1486</td><td>二分+DFS找负环</td><td>34</td><td>33</td><td>67</td><td>8</td></tr><tr><td>1564</td><td>区间DP</td><td>35</td><td>32</td><td>67</td><td>6</td></tr><tr><td>1794</td><td>DP</td><td>37</td><td>30</td><td>67</td><td>5</td></tr><tr><td>1798</td><td>线段树</td><td>29</td><td>38</td><td>67</td><td>9</td></tr><tr><td>1860</td><td>DP</td><td>34</td><td>33</td><td>67</td><td>6</td></tr><tr><td>2281</td><td>博弈+DP</td><td>39</td><td>28</td><td>67</td><td>5</td></tr><tr><td>2440</td><td>二分+莫比乌斯容斥</td><td>34</td><td>33</td><td>67</td><td>6</td></tr><tr><td>2458</td><td>分治计算几何</td><td>34</td><td>33</td><td>67</td><td>7</td></tr><tr><td>2667</td><td>暴枚+解方程判断</td><td>35</td><td>32</td><td>67</td><td>6</td></tr><tr><td>2746</td><td>BFS</td><td>30</td><td>37</td><td>67</td><td>3</td></tr><tr><td>2767</td><td>DP</td><td>37</td><td>30</td><td>67</td><td>6</td></tr><tr><td>2809</td><td>可并堆</td><td>33</td><td>34</td><td>67</td><td>8</td></tr><tr><td>2818</td><td>欧拉函数/莫比乌斯反演</td><td>34</td><td>33</td><td>67</td><td>7</td></tr><tr><td>3107</td><td>构造</td><td>40</td><td>27</td><td>67</td><td>5</td></tr><tr><td>3226</td><td>线段树</td><td>30</td><td>37</td><td>67</td><td>4</td></tr><tr><td>3287</td><td>高精度</td><td>32</td><td>35</td><td>67</td><td>2</td></tr><tr><td>3555</td><td>HASH</td><td>34</td><td>33</td><td>67</td><td>5</td></tr><tr><td>4196</td><td>树链剖分</td><td>29</td><td>38</td><td>67</td><td>7</td></tr><tr><td>4236</td><td>MAP</td><td>35</td><td>32</td><td>67</td><td>6</td></tr><tr><td>4347</td><td>DP</td><td>38</td><td>29</td><td>67</td><td></td></tr><tr><td>4366</td><td>DP讨论</td><td>46</td><td>21</td><td>67</td><td></td></tr><tr><td>1180/2843</td><td>LCT</td><td>28</td><td>39</td><td>67</td><td>5</td></tr><tr><td>1786&amp;1831</td><td>DP</td><td>36</td><td>31</td><td>67</td><td>5</td></tr><tr><td>1408</td><td>数论</td><td>40</td><td>28</td><td>68</td><td>2</td></tr><tr><td>1412</td><td>网络流</td><td>33</td><td>35</td><td>68</td><td>5</td></tr><tr><td>1434</td><td>博弈论</td><td>43</td><td>25</td><td>68</td><td>5</td></tr><tr><td>1497</td><td>最小割</td><td>33</td><td>35</td><td>68</td><td>9</td></tr><tr><td>1503</td><td>Splay</td><td>30</td><td>38</td><td>68</td><td>8</td></tr><tr><td>1562</td><td>二分图DFS序</td><td>34</td><td>34</td><td>68</td><td>8</td></tr><tr><td>1567</td><td>二分+HASH</td><td>34</td><td>34</td><td>68</td><td>5</td></tr><tr><td>1597</td><td>排序+DP斜率优化</td><td>34</td><td>34</td><td>68</td><td>8</td></tr><tr><td>1826</td><td>贪心+堆</td><td>35</td><td>33</td><td>68</td><td>7</td></tr><tr><td>1833</td><td>数位DP</td><td>34</td><td>34</td><td>68</td><td>7</td></tr><tr><td>1922</td><td>Dijkstra堆优</td><td>33</td><td>35</td><td>68</td><td>9</td></tr><tr><td>2038</td><td>莫队</td><td>32</td><td>36</td><td>68</td><td>9</td></tr><tr><td>2111</td><td>排列组合</td><td>34</td><td>34</td><td>68</td><td>3</td></tr><tr><td>2118</td><td>最短路</td><td>35</td><td>33</td><td>68</td><td>8</td></tr><tr><td>2160</td><td>Manacher+快速幂</td><td>34</td><td>34</td><td>68</td><td>7</td></tr><tr><td>2227</td><td>高精算概率</td><td>35</td><td>33</td><td>68</td><td>2</td></tr><tr><td>2654</td><td>二分+最小生成树</td><td>35</td><td>33</td><td>68</td><td>6</td></tr><tr><td>2661</td><td>费用流</td><td>34</td><td>34</td><td>68</td><td>6</td></tr><tr><td>2823</td><td>最小圆覆盖</td><td>29</td><td>39</td><td>68</td><td>7</td></tr><tr><td>3111</td><td>DP</td><td>35</td><td>33</td><td>68</td><td>6</td></tr><tr><td>3207</td><td>HASH/莫队/主席树</td><td>31</td><td>37</td><td>68</td><td>2</td></tr><tr><td>3211</td><td>暴力并查集+树状数组</td><td>35</td><td>33</td><td>68</td><td>4</td></tr><tr><td>3225</td><td>线段树扫描</td><td>32</td><td>36</td><td>68</td><td>2</td></tr><tr><td>3233</td><td>线性筛+DP</td><td>36</td><td>32</td><td>68</td><td>6</td></tr><tr><td>3442</td><td>费用流</td><td>34</td><td>34</td><td>68</td><td>6</td></tr><tr><td>3670</td><td>KMP</td><td>34</td><td>34</td><td>68</td><td>6</td></tr><tr><td>4337</td><td>HASH判树同构</td><td>33</td><td>35</td><td>68</td><td>4</td></tr><tr><td>4364</td><td>线段树</td><td>31</td><td>37</td><td>68</td><td></td></tr><tr><td>4378</td><td>树状数组</td><td>34</td><td>34</td><td>68</td><td></td></tr><tr><td>1056&amp;1862</td><td>Trie+Splay</td><td>28</td><td>40</td><td>68</td><td>3</td></tr><tr><td>1043</td><td>计算几何+贪心</td><td>33</td><td>36</td><td>69</td><td>7</td></tr><tr><td>1066</td><td>网络流</td><td>34</td><td>35</td><td>69</td><td>8</td></tr><tr><td>1221</td><td>费用流</td><td>35</td><td>34</td><td>69</td><td>9</td></tr><tr><td>1264</td><td>树状数组优化DP</td><td>36</td><td>33</td><td>69</td><td>5</td></tr><tr><td>1411</td><td>推猜结论</td><td>41</td><td>28</td><td>69</td><td>6</td></tr><tr><td>1855</td><td>DP+单调队列</td><td>35</td><td>34</td><td>69</td><td>8</td></tr><tr><td>1858</td><td>线段树各种操作</td><td>30</td><td>39</td><td>69</td><td>8</td></tr><tr><td>2002</td><td>LCT</td><td>31</td><td>38</td><td>69</td><td>6</td></tr><tr><td>2131</td><td>树状数组优化DP</td><td>36</td><td>33</td><td>69</td><td>7</td></tr><tr><td>2157</td><td>LCT多种操作</td><td>29</td><td>40</td><td>69</td><td>7</td></tr><tr><td>2226</td><td>数学</td><td>36</td><td>33</td><td>69</td><td>7</td></tr><tr><td>2298</td><td>DP</td><td>40</td><td>29</td><td>69</td><td>6</td></tr><tr><td>2460</td><td>拟阵+线性基</td><td>37</td><td>32</td><td>69</td><td>6</td></tr><tr><td>3105</td><td>拟阵+线性基</td><td>37</td><td>32</td><td>69</td><td>6</td></tr><tr><td>3195</td><td>状压DP</td><td>37</td><td>32</td><td>69</td><td>5</td></tr><tr><td>3289</td><td>莫队+BIT</td><td>32</td><td>37</td><td>69</td><td>6</td></tr><tr><td>3316</td><td>二分+单调队列</td><td>35</td><td>34</td><td>69</td><td>6</td></tr><tr><td>3671</td><td>贪心</td><td>36</td><td>33</td><td>69</td><td>7</td></tr><tr><td>3675</td><td>多维DP斜率优化</td><td>34</td><td>35</td><td>69</td><td>6</td></tr><tr><td>3884</td><td>费马+欧拉函数+快速幂</td><td>37</td><td>32</td><td>69</td><td>6</td></tr><tr><td>4004</td><td>线性基</td><td>36</td><td>33</td><td>69</td><td>8</td></tr><tr><td>4034</td><td>DFS序维护树</td><td>31</td><td>38</td><td>69</td><td>8</td></tr><tr><td>4084</td><td>HASH</td><td>32</td><td>37</td><td>69</td><td>5</td></tr><tr><td>4320</td><td>分块</td><td>36</td><td>33</td><td>69</td><td></td></tr><tr><td>1006</td><td>弦图染色</td><td>40</td><td>30</td><td>70</td><td>2</td></tr><tr><td>1041</td><td>数学</td><td>44</td><td>26</td><td>70</td><td>7</td></tr><tr><td>1052</td><td>二分+DFS</td><td>37</td><td>33</td><td>70</td><td>4</td></tr><tr><td>1150</td><td>贪心+堆</td><td>38</td><td>32</td><td>70</td><td>8</td></tr><tr><td>1151</td><td>状压DP</td><td>36</td><td>34</td><td>70</td><td>7</td></tr><tr><td>1188</td><td>博弈论SG函数</td><td>37</td><td>33</td><td>70</td><td>7</td></tr><tr><td>1483</td><td>链表启发式合并</td><td>35</td><td>35</td><td>70</td><td>7</td></tr><tr><td>1566</td><td>DP</td><td>38</td><td>32</td><td>70</td><td>7</td></tr><tr><td>1570</td><td>二分+网络流</td><td>35</td><td>35</td><td>70</td><td>4</td></tr><tr><td>1818</td><td>离散化+树状数组</td><td>35</td><td>35</td><td>70</td><td>5</td></tr><tr><td>1857</td><td>三分套三分</td><td>34</td><td>36</td><td>70</td><td>7</td></tr><tr><td>1877</td><td>费用流</td><td>36</td><td>34</td><td>70</td><td>7</td></tr><tr><td>1878</td><td>离线树状数组</td><td>36</td><td>34</td><td>70</td><td>8</td></tr><tr><td>1898</td><td>矩阵乘法</td><td>35</td><td>35</td><td>70</td><td>6</td></tr><tr><td>1923</td><td>高斯消元</td><td>36</td><td>34</td><td>70</td><td>8</td></tr><tr><td>2037</td><td>区间DP</td><td>39</td><td>31</td><td>70</td><td>7</td></tr><tr><td>2152</td><td>点分治</td><td>33</td><td>37</td><td>70</td><td>7</td></tr><tr><td>2243</td><td>树链剖分</td><td>30</td><td>40</td><td>70</td><td>7</td></tr><tr><td>2339</td><td>排列组合+快速幂</td><td>40</td><td>30</td><td>70</td><td>5</td></tr><tr><td>2424</td><td>费用流</td><td>36</td><td>34</td><td>70</td><td>7</td></tr><tr><td>2439</td><td>DP单调优化+扫描</td><td>37</td><td>33</td><td>70</td><td>5</td></tr><tr><td>2468</td><td>数学公式优化</td><td>38</td><td>32</td><td>70</td><td>6</td></tr><tr><td>2666</td><td>贪心调整</td><td>40</td><td>30</td><td>70</td><td>7</td></tr><tr><td>2957</td><td>分块</td><td>35</td><td>35</td><td>70</td><td>6</td></tr><tr><td>3109</td><td>搜索</td><td>32</td><td>38</td><td>70</td><td>5</td></tr><tr><td>3124</td><td>树形DP</td><td>36</td><td>34</td><td>70</td><td>6</td></tr><tr><td>3193</td><td>DP</td><td>40</td><td>30</td><td>70</td><td>6</td></tr><tr><td>3240</td><td>费马小定理+矩阵乘法</td><td>35</td><td>35</td><td>70</td><td>7</td></tr><tr><td>3436</td><td>差分约束+判负环</td><td>36</td><td>34</td><td>70</td><td>7</td></tr><tr><td>3531</td><td>树链剖分</td><td>30</td><td>40</td><td>70</td><td>7</td></tr><tr><td>3562</td><td>缩点+并查集</td><td>35</td><td>35</td><td>70</td><td>2</td></tr><tr><td>3624</td><td>最小生成树+贪心</td><td>37</td><td>33</td><td>70</td><td>6</td></tr><tr><td>3676</td><td>回文自动机</td><td>33</td><td>37</td><td>70</td><td>8</td></tr><tr><td>3680</td><td>模拟退火</td><td>33</td><td>37</td><td>70</td><td>8</td></tr><tr><td>3685</td><td>线段树</td><td>31</td><td>39</td><td>70</td><td>4</td></tr><tr><td>3732</td><td>Kruskal+树上倍增</td><td>34</td><td>36</td><td>70</td><td>8</td></tr><tr><td>3813</td><td>线段树+逆元</td><td>32</td><td>38</td><td>70</td><td>7</td></tr><tr><td>3930</td><td>数学</td><td>41</td><td>29</td><td>70</td><td>4</td></tr><tr><td>3993</td><td>二分+网络流</td><td>35</td><td>35</td><td>70</td><td>7</td></tr><tr><td>4003</td><td>可并堆</td><td>34</td><td>36</td><td>70</td><td>8</td></tr><tr><td>4027</td><td>树形DP</td><td>37</td><td>33</td><td>70</td><td>5</td></tr><tr><td>4031</td><td>矩阵树定理</td><td>35</td><td>35</td><td>70</td><td>7</td></tr><tr><td>4198</td><td>K叉哈夫曼</td><td>37</td><td>33</td><td>70</td><td>7</td></tr><tr><td>4319</td><td>构造SA</td><td>40</td><td>30</td><td>70</td><td>5</td></tr><tr><td>4338</td><td>分解质因数</td><td>38</td><td>32</td><td>70</td><td></td></tr><tr><td>4349</td><td>最小树形图</td><td>31</td><td>39</td><td>70</td><td>8</td></tr><tr><td>4370</td><td>线段树</td><td>30</td><td>40</td><td>70</td><td></td></tr><tr><td>1040</td><td>环+外向树DP</td><td>34</td><td>37</td><td>71</td><td>8</td></tr><tr><td>1063</td><td>树形DP</td><td>37</td><td>34</td><td>71</td><td>8</td></tr><tr><td>1070</td><td>费用流</td><td>37</td><td>34</td><td>71</td><td>7</td></tr><tr><td>1071</td><td>单调扫描</td><td>38</td><td>33</td><td>71</td><td>7</td></tr><tr><td>1143</td><td>Floyd+二分图</td><td>38</td><td>33</td><td>71</td><td>8</td></tr><tr><td>1217</td><td>树形贪心</td><td>38</td><td>33</td><td>71</td><td>7</td></tr><tr><td>1297</td><td>矩阵乘法</td><td>37</td><td>34</td><td>71</td><td>8</td></tr><tr><td>1415</td><td>期望+记忆化DP</td><td>37</td><td>34</td><td>71</td><td>8</td></tr><tr><td>1484</td><td>贪心调整</td><td>42</td><td>29</td><td>71</td><td>7</td></tr><tr><td>1799</td><td>数位DP</td><td>36</td><td>35</td><td>71</td><td>6</td></tr><tr><td>1834</td><td>最大流+费用流</td><td>34</td><td>37</td><td>71</td><td>5</td></tr><tr><td>1910</td><td>DP</td><td>38</td><td>33</td><td>71</td><td>6</td></tr><tr><td>1935</td><td>离线树状数组</td><td>36</td><td>35</td><td>71</td><td>5</td></tr><tr><td>1975</td><td>K短路</td><td>33</td><td>38</td><td>71</td><td>7</td></tr><tr><td>2133</td><td>树形DP</td><td>37</td><td>34</td><td>71</td><td>6</td></tr><tr><td>2151</td><td>双向链表+贪心+堆</td><td>37</td><td>34</td><td>71</td><td>8</td></tr><tr><td>2169</td><td>DP</td><td>41</td><td>30</td><td>71</td><td>7</td></tr><tr><td>2245</td><td>费用流</td><td>36</td><td>35</td><td>71</td><td>6</td></tr><tr><td>2257</td><td>裴蜀定理</td><td>38</td><td>33</td><td>71</td><td>4</td></tr><tr><td>2306</td><td>倍增+Floyd</td><td>37</td><td>34</td><td>71</td><td>7</td></tr><tr><td>2326</td><td>矩阵乘法</td><td>37</td><td>34</td><td>71</td><td>5</td></tr><tr><td>2337</td><td>期望高斯消元</td><td>36</td><td>35</td><td>71</td><td>7</td></tr><tr><td>2542</td><td>费用流</td><td>35</td><td>36</td><td>71</td><td>4</td></tr><tr><td>2560</td><td>子集DP</td><td>39</td><td>32</td><td>71</td><td>7</td></tr><tr><td>2743</td><td>离线树状数组</td><td>36</td><td>35</td><td>71</td><td>8</td></tr><tr><td>3130</td><td>二分+网络流</td><td>36</td><td>35</td><td>71</td><td>7</td></tr><tr><td>3231</td><td>矩阵乘法</td><td>35</td><td>36</td><td>71</td><td>4</td></tr><tr><td>3560</td><td>数论</td><td>37</td><td>34</td><td>71</td><td>6</td></tr><tr><td>3566</td><td>树形DP</td><td>38</td><td>33</td><td>71</td><td>6</td></tr><tr><td>3996</td><td>网络流</td><td>36</td><td>35</td><td>71</td><td>5</td></tr><tr><td>4029</td><td>模拟</td><td>39</td><td>32</td><td>71</td><td>4</td></tr><tr><td>4240</td><td>树状数组</td><td>40</td><td>31</td><td>71</td><td></td></tr><tr><td>4244</td><td>DP</td><td>41</td><td>30</td><td>71</td><td></td></tr><tr><td>4312</td><td>分类讨论</td><td>43</td><td>28</td><td>71</td><td>4</td></tr><tr><td>4326</td><td>树剖/讨论求链交</td><td>32</td><td>39</td><td>71</td><td>7</td></tr><tr><td>1306&amp;3139</td><td>搜索+剪枝</td><td>40</td><td>31</td><td>71</td><td>6</td></tr><tr><td>2662&amp;2763</td><td>分层图+Dijkstra堆优化</td><td>35</td><td>36</td><td>71</td><td>8</td></tr><tr><td>1005</td><td>Prufer</td><td>37</td><td>35</td><td>72</td><td>7</td></tr><tr><td>1061</td><td>单纯形</td><td>34</td><td>38</td><td>72</td><td>8</td></tr><tr><td>1069</td><td>旋转卡壳</td><td>33</td><td>39</td><td>72</td><td>8</td></tr><tr><td>1093</td><td>tarjan缩点+DP</td><td>36</td><td>36</td><td>72</td><td>9</td></tr><tr><td>1179</td><td>tarjan缩点+SPFA</td><td>35</td><td>37</td><td>72</td><td>9</td></tr><tr><td>1211</td><td>Prufer</td><td>39</td><td>33</td><td>72</td><td>3</td></tr><tr><td>1227</td><td>离散化+树状数组扫描</td><td>35</td><td>37</td><td>72</td><td>7</td></tr><tr><td>1266</td><td>最短路+最小割</td><td>35</td><td>37</td><td>72</td><td>8</td></tr><tr><td>1499</td><td>DP单调优化</td><td>35</td><td>37</td><td>72</td><td>6</td></tr><tr><td>1568</td><td>线段树</td><td>34</td><td>38</td><td>72</td><td>6</td></tr><tr><td>1823</td><td>2-SAT</td><td>36</td><td>36</td><td>72</td><td>7</td></tr><tr><td>1853</td><td>搜索+剪枝+容斥原理</td><td>39</td><td>33</td><td>72</td><td>6</td></tr><tr><td>1927</td><td>费用流</td><td>38</td><td>34</td><td>72</td><td>9</td></tr><tr><td>2142</td><td>扩展lucas</td><td>33</td><td>39</td><td>72</td><td>8</td></tr><tr><td>2163</td><td>最小割</td><td>37</td><td>35</td><td>72</td><td>4</td></tr><tr><td>2438</td><td>tarjan缩点</td><td>36</td><td>36</td><td>72</td><td>4</td></tr><tr><td>2588</td><td>DFS序+可持久化线段树</td><td>31</td><td>41</td><td>72</td><td>8</td></tr><tr><td>2733</td><td>Splay启发式合并</td><td>33</td><td>39</td><td>72</td><td>7</td></tr><tr><td>2742</td><td>数论</td><td>39</td><td>33</td><td>72</td><td>5</td></tr><tr><td>2749</td><td>转化后递推</td><td>42</td><td>30</td><td>72</td><td>6</td></tr><tr><td>2753</td><td>最小生成树</td><td>40</td><td>32</td><td>72</td><td>5</td></tr><tr><td>2816</td><td>LCT</td><td>31</td><td>41</td><td>72</td><td>5</td></tr><tr><td>2827</td><td>动态开点线段树</td><td>32</td><td>40</td><td>72</td><td>6</td></tr><tr><td>2962</td><td>线段树</td><td>33</td><td>39</td><td>72</td><td>7</td></tr><tr><td>2964</td><td>DP</td><td>36</td><td>36</td><td>72</td><td>5</td></tr><tr><td>3143</td><td>期望高斯消元</td><td>36</td><td>36</td><td>72</td><td>8</td></tr><tr><td>3144</td><td>最小割</td><td>37</td><td>35</td><td>72</td><td>6</td></tr><tr><td>3150</td><td>高斯消元</td><td>38</td><td>34</td><td>72</td><td>6</td></tr><tr><td>3152</td><td>贪心+堆</td><td>37</td><td>35</td><td>72</td><td>4</td></tr><tr><td>3295</td><td>分块统计动态逆序对</td><td>34</td><td>38</td><td>72</td><td>8</td></tr><tr><td>3333</td><td>BIT+线段树</td><td>34</td><td>38</td><td>72</td><td>5</td></tr><tr><td>3507</td><td>HASH+DP</td><td>37</td><td>35</td><td>72</td><td>5</td></tr><tr><td>3570</td><td>物理+树状数组</td><td>38</td><td>34</td><td>72</td><td>3</td></tr><tr><td>3576</td><td>博弈论+分块</td><td>41</td><td>31</td><td>72</td><td>6</td></tr><tr><td>3578</td><td>Set+rand Hash</td><td>36</td><td>36</td><td>72</td><td>4</td></tr><tr><td>3594</td><td>DP树状数组优化</td><td>39</td><td>33</td><td>72</td><td>4</td></tr><tr><td>3620</td><td>暴力+KMP</td><td>38</td><td>34</td><td>72</td><td>2</td></tr><tr><td>3629</td><td>判素数+约数和公式+暴力</td><td>38</td><td>34</td><td>72</td><td>4</td></tr><tr><td>3679</td><td>数位DP</td><td>36</td><td>36</td><td>72</td><td>5</td></tr><tr><td>3738</td><td>扩展lucas</td><td>32</td><td>40</td><td>72</td><td>5</td></tr><tr><td>3810</td><td>记忆化+卡常</td><td>37</td><td>35</td><td>72</td><td>6</td></tr><tr><td>3944</td><td>杜教筛</td><td>36</td><td>36</td><td>72</td><td>8</td></tr><tr><td>3673&amp;3674</td><td>可持久化ROPE</td><td>36</td><td>36</td><td>72</td><td>4</td></tr><tr><td>1016</td><td>最小生成树+DFS</td><td>40</td><td>33</td><td>73</td><td>6</td></tr><tr><td>1030</td><td>AC自动机+DP</td><td>36</td><td>37</td><td>73</td><td>8</td></tr><tr><td>1077</td><td>差分约束+Floyd</td><td>39</td><td>34</td><td>73</td><td>8</td></tr><tr><td>1085</td><td>A*</td><td>38</td><td>35</td><td>73</td><td>8</td></tr><tr><td>1177</td><td>分类讨论</td><td>36</td><td>37</td><td>73</td><td>4</td></tr><tr><td>1189</td><td>二分+网络流</td><td>37</td><td>36</td><td>73</td><td>6</td></tr><tr><td>1223</td><td>数位DP+高精度</td><td>36</td><td>37</td><td>73</td><td>2</td></tr><tr><td>1812</td><td>树形DP</td><td>40</td><td>33</td><td>73</td><td>8</td></tr><tr><td>1822</td><td>二分+网络流</td><td>35</td><td>38</td><td>73</td><td>4</td></tr><tr><td>1933</td><td>DP</td><td>41</td><td>32</td><td>73</td><td>7</td></tr><tr><td>1951</td><td>卢卡斯+CRT</td><td>38</td><td>35</td><td>73</td><td>7</td></tr><tr><td>2115</td><td>找环+线性基</td><td>38</td><td>35</td><td>73</td><td>8</td></tr><tr><td>2124</td><td>分类讨论分治+Cheat</td><td>40</td><td>33</td><td>73</td><td>2</td></tr><tr><td>2141</td><td>分块统计动态逆序对</td><td>34</td><td>39</td><td>73</td><td>8</td></tr><tr><td>2146</td><td>凸包+单调队列</td><td>37</td><td>36</td><td>73</td><td>5</td></tr><tr><td>2425</td><td>数位DP</td><td>40</td><td>33</td><td>73</td><td>6</td></tr><tr><td>2427</td><td>tarjan缩点+树上背包</td><td>36</td><td>37</td><td>73</td><td>7</td></tr><tr><td>2523</td><td>智商题</td><td>45</td><td>28</td><td>73</td><td>3</td></tr><tr><td>2618</td><td>半平面交</td><td>30</td><td>43</td><td>73</td><td>5</td></tr><tr><td>2752</td><td>线段树大力维护</td><td>33</td><td>40</td><td>73</td><td>7</td></tr><tr><td>2844</td><td>拟阵+线性基+找规律</td><td>40</td><td>33</td><td>73</td><td>6</td></tr><tr><td>3085</td><td>搜索+剪枝+高精度</td><td>35</td><td>38</td><td>73</td><td>2</td></tr><tr><td>3140</td><td>暴力+二分图匹配</td><td>37</td><td>36</td><td>73</td><td>6</td></tr><tr><td>3171</td><td>费用流</td><td>38</td><td>35</td><td>73</td><td>7</td></tr><tr><td>3238</td><td>后缀数组+单调栈</td><td>35</td><td>38</td><td>73</td><td>7</td></tr><tr><td>3329</td><td>数位DP+矩阵乘法</td><td>36</td><td>37</td><td>73</td><td>5</td></tr><tr><td>3330</td><td>三分套三分</td><td>36</td><td>37</td><td>73</td><td>4</td></tr><tr><td>3441</td><td>BIT+二分</td><td>39</td><td>34</td><td>73</td><td>5</td></tr><tr><td>3503</td><td>异或高斯消元</td><td>39</td><td>34</td><td>73</td><td>7</td></tr><tr><td>3621</td><td>数学</td><td>38</td><td>35</td><td>73</td><td>2</td></tr><tr><td>3931</td><td>最短路+网络流</td><td>35</td><td>38</td><td>73</td><td>8</td></tr><tr><td>3998</td><td>后缀自动机</td><td>35</td><td>38</td><td>73</td><td>8</td></tr><tr><td>3999</td><td>树链剖分</td><td>32</td><td>41</td><td>73</td><td>6</td></tr><tr><td>4007</td><td>DP</td><td>37</td><td>36</td><td>73</td><td>7</td></tr><tr><td>4028</td><td>set+分块</td><td>35</td><td>38</td><td>73</td><td>6</td></tr><tr><td>4153</td><td>链表合并+set</td><td>38</td><td>35</td><td>73</td><td>5</td></tr><tr><td>4243</td><td>并查集统计</td><td>39</td><td>34</td><td>73</td><td></td></tr><tr><td>4245</td><td>按位线性基调整</td><td>40</td><td>33</td><td>73</td><td></td></tr><tr><td>1934&amp;2768</td><td>网络流</td><td>38</td><td>35</td><td>73</td><td>8</td></tr><tr><td>1014</td><td>Splay+二分HASH</td><td>34</td><td>40</td><td>74</td><td>8</td></tr><tr><td>1017</td><td>树形DP</td><td>38</td><td>36</td><td>74</td><td>4</td></tr><tr><td>1049</td><td>LIS+DP</td><td>40</td><td>34</td><td>74</td><td>3</td></tr><tr><td>1073</td><td>K短路</td><td>35</td><td>39</td><td>74</td><td>4</td></tr><tr><td>1185</td><td>旋转卡壳</td><td>36</td><td>38</td><td>74</td><td>8</td></tr><tr><td>1190</td><td>分层背包</td><td>40</td><td>34</td><td>74</td><td>7</td></tr><tr><td>1226</td><td>状压DP</td><td>40</td><td>34</td><td>74</td><td>8</td></tr><tr><td>1305</td><td>二分+网络流</td><td>38</td><td>36</td><td>74</td><td>8</td></tr><tr><td>1444</td><td>AC自动机+矩阵乘法</td><td>36</td><td>38</td><td>74</td><td>7</td></tr><tr><td>1500</td><td>Splay各种操作</td><td>33</td><td>41</td><td>74</td><td>10</td></tr><tr><td>1875</td><td>矩阵乘法+拆边构图</td><td>39</td><td>35</td><td>74</td><td>8</td></tr><tr><td>1880</td><td>最短路+拓扑</td><td>37</td><td>37</td><td>74</td><td>7</td></tr><tr><td>1930</td><td>费用流</td><td>40</td><td>34</td><td>74</td><td>7</td></tr><tr><td>1941</td><td>K-D树</td><td>33</td><td>41</td><td>74</td><td>7</td></tr><tr><td>2004</td><td>矩阵乘法</td><td>36</td><td>38</td><td>74</td><td>7</td></tr><tr><td>2121</td><td>DP</td><td>40</td><td>34</td><td>74</td><td>7</td></tr><tr><td>2135</td><td>贪心+堆</td><td>39</td><td>35</td><td>74</td><td>6</td></tr><tr><td>2143</td><td>Dijkstra堆优不建边分层图</td><td>35</td><td>39</td><td>74</td><td>5</td></tr><tr><td>2301</td><td>容斥+莫比乌斯反演+前缀和</td><td>38</td><td>36</td><td>74</td><td>8</td></tr><tr><td>2336</td><td>搜索+随机化</td><td>39</td><td>35</td><td>74</td><td>5</td></tr><tr><td>2342</td><td>Manacher+并查集</td><td>40</td><td>34</td><td>74</td><td>6</td></tr><tr><td>2622</td><td>最短路变形</td><td>39</td><td>35</td><td>74</td><td>6</td></tr><tr><td>2648</td><td>K-D树</td><td>33</td><td>41</td><td>74</td><td>7</td></tr><tr><td>2728</td><td>推性质+按位统计</td><td>41</td><td>33</td><td>74</td><td>6</td></tr><tr><td>2958</td><td>DP</td><td>42</td><td>32</td><td>74</td><td>7</td></tr><tr><td>3083</td><td>树链剖分+DFS序讨论</td><td>34</td><td>40</td><td>74</td><td>7</td></tr><tr><td>3122</td><td>数列求和分类讨论逆元+BSGS</td><td>38</td><td>36</td><td>74</td><td>7</td></tr><tr><td>3198</td><td>HASH+容斥</td><td>36</td><td>38</td><td>74</td><td>6</td></tr><tr><td>3294</td><td>DP+容斥</td><td>41</td><td>33</td><td>74</td><td>8</td></tr><tr><td>3534</td><td>矩阵树定理</td><td>39</td><td>35</td><td>74</td><td>6</td></tr><tr><td>3564</td><td>最小圆覆盖</td><td>34</td><td>40</td><td>74</td><td>3</td></tr><tr><td>3744</td><td>分块在线统计逆序对</td><td>35</td><td>39</td><td>74</td><td>8</td></tr><tr><td>3751</td><td>HASH判方程</td><td>40</td><td>34</td><td>74</td><td>8</td></tr><tr><td>3875</td><td>SPFA维护DP</td><td>39</td><td>35</td><td>74</td><td>6</td></tr><tr><td>3932</td><td>差分主席树</td><td>34</td><td>40</td><td>74</td><td>6</td></tr><tr><td>3938</td><td>离线李超线段树</td><td>34</td><td>40</td><td>74</td><td>7</td></tr><tr><td>4000</td><td>矩阵乘法</td><td>36</td><td>38</td><td>74</td><td>5</td></tr><tr><td>4010</td><td>拓扑+堆</td><td>38</td><td>36</td><td>74</td><td>7</td></tr><tr><td>4013</td><td>树形DP</td><td>39</td><td>35</td><td>74</td><td>7</td></tr><tr><td>4033</td><td>树形DP</td><td>39</td><td>35</td><td>74</td><td>7</td></tr><tr><td>4152</td><td>排序+最短路</td><td>38</td><td>36</td><td>74</td><td>5</td></tr><tr><td>4237</td><td>分治+统计</td><td>37</td><td>37</td><td>74</td><td></td></tr><tr><td>4239</td><td>优先队列+二分</td><td>38</td><td>36</td><td>74</td><td></td></tr><tr><td>4241</td><td>分块</td><td>34</td><td>40</td><td>74</td><td></td></tr><tr><td>4299</td><td>主席树</td><td>38</td><td>36</td><td>74</td><td>8</td></tr><tr><td>1001</td><td>平面图转对偶图+最短路</td><td>37</td><td>38</td><td>75</td><td>8</td></tr><tr><td>1004</td><td>Poyla定理+DP+逆元</td><td>39</td><td>36</td><td>75</td><td>8</td></tr><tr><td>1009</td><td>KMP+矩阵乘法</td><td>38</td><td>37</td><td>75</td><td>8</td></tr><tr><td>1021</td><td>DP+优化</td><td>39</td><td>36</td><td>75</td><td>7</td></tr><tr><td>1027</td><td>凸包+最短路</td><td>36</td><td>39</td><td>75</td><td>4</td></tr><tr><td>1067</td><td>线段树分类讨论</td><td>36</td><td>39</td><td>75</td><td>2</td></tr><tr><td>1195</td><td>AC自动机+状压BFS</td><td>37</td><td>38</td><td>75</td><td>4</td></tr><tr><td>1449</td><td>费用流</td><td>40</td><td>35</td><td>75</td><td>8</td></tr><tr><td>1453</td><td>线段树+并查集</td><td>36</td><td>39</td><td>75</td><td>7</td></tr><tr><td>1917</td><td>树形贪心</td><td>43</td><td>32</td><td>75</td><td>7</td></tr><tr><td>1924</td><td>tarjan</td><td>35</td><td>40</td><td>75</td><td>4</td></tr><tr><td>1937</td><td>KM</td><td>39</td><td>36</td><td>75</td><td>7</td></tr><tr><td>2119</td><td>分段HASH</td><td>40</td><td>35</td><td>75</td><td>7</td></tr><tr><td>2128</td><td>按权值分块</td><td>35</td><td>40</td><td>75</td><td>7</td></tr><tr><td>2164</td><td>树剖背包</td><td>33</td><td>42</td><td>75</td><td>6</td></tr><tr><td>2244</td><td>三维偏序</td><td>36</td><td>39</td><td>75</td><td>4</td></tr><tr><td>2303</td><td>并查集+讨论</td><td>41</td><td>34</td><td>75</td><td>7</td></tr><tr><td>2561</td><td>网络流</td><td>39</td><td>36</td><td>75</td><td>6</td></tr><tr><td>2744</td><td>转化后二分图</td><td>40</td><td>35</td><td>75</td><td>6</td></tr><tr><td>2746</td><td>AC自动机+FAIL树LCA</td><td>37</td><td>38</td><td>75</td><td>7</td></tr><tr><td>2750</td><td>最短路+DP</td><td>41</td><td>34</td><td>75</td><td>7</td></tr><tr><td>2956</td><td>推公式+分块</td><td>40</td><td>35</td><td>75</td><td>6</td></tr><tr><td>3091</td><td>LCT各种操作大力维护</td><td>34</td><td>41</td><td>75</td><td>8</td></tr><tr><td>3112</td><td>单纯形</td><td>36</td><td>39</td><td>75</td><td>7</td></tr><tr><td>3203</td><td>三分+单调队列</td><td>38</td><td>37</td><td>75</td><td>6</td></tr><tr><td>3597</td><td>二分+DFS找负环</td><td>41</td><td>34</td><td>75</td><td>6</td></tr><tr><td>3626</td><td>离线树链剖分</td><td>34</td><td>41</td><td>75</td><td>6</td></tr><tr><td>3636</td><td>分治+DP</td><td>38</td><td>37</td><td>75</td><td>7</td></tr><tr><td>3926</td><td>后缀自动机</td><td>37</td><td>38</td><td>75</td><td>8</td></tr><tr><td>3934</td><td>插头DP</td><td>38</td><td>37</td><td>75</td><td>6</td></tr><tr><td>3956</td><td>单调栈+RMQ</td><td>41</td><td>34</td><td>75</td><td>7</td></tr><tr><td>4002</td><td>矩阵乘法+推公式</td><td>41</td><td>34</td><td>75</td><td>5</td></tr><tr><td>4017</td><td>按位统计+树状数组</td><td>39</td><td>36</td><td>75</td><td>6</td></tr><tr><td>4037</td><td>矩阵乘法</td><td>38</td><td>37</td><td>75</td><td>5</td></tr><tr><td>4289</td><td>Dijkstra</td><td>39</td><td>36</td><td>75</td><td></td></tr><tr><td>4404</td><td>BFS+打表</td><td>39</td><td>36</td><td>75</td><td></td></tr><tr><td>1487&amp;4316</td><td>仙人掌DP</td><td>36</td><td>39</td><td>75</td><td>7</td></tr><tr><td>2109&amp;2535</td><td>拓扑逆向加边</td><td>40</td><td>35</td><td>75</td><td>7</td></tr><tr><td>1194</td><td>BFS+tarjan缩点最长路</td><td>38</td><td>38</td><td>76</td><td>8</td></tr><tr><td>1298</td><td>构造</td><td>41</td><td>35</td><td>76</td><td>8</td></tr><tr><td>1443</td><td>二分图+判断</td><td>41</td><td>35</td><td>76</td><td>8</td></tr><tr><td>1913</td><td>极角排序统计贡献</td><td>43</td><td>33</td><td>76</td><td>7</td></tr><tr><td>1997</td><td>2-SAT</td><td>40</td><td>36</td><td>76</td><td>4</td></tr><tr><td>1998</td><td>并查集+置换</td><td>40</td><td>36</td><td>76</td><td>7</td></tr><tr><td>2007</td><td>平面图转对偶图+最短路</td><td>38</td><td>38</td><td>76</td><td>7</td></tr><tr><td>2129</td><td>多次前缀和处理</td><td>40</td><td>36</td><td>76</td><td>5</td></tr><tr><td>2145</td><td>密码学</td><td>37</td><td>39</td><td>76</td><td>1</td></tr><tr><td>2553</td><td>AC自动机+矩阵乘法</td><td>37</td><td>39</td><td>76</td><td>7</td></tr><tr><td>2568</td><td>按位BIT</td><td>39</td><td>37</td><td>76</td><td>4</td></tr><tr><td>2597</td><td>费用流</td><td>42</td><td>34</td><td>76</td><td>7</td></tr><tr><td>3622</td><td>容斥DP</td><td>44</td><td>32</td><td>76</td><td>8</td></tr><tr><td>3630</td><td>最小割</td><td>37</td><td>39</td><td>76</td><td>7</td></tr><tr><td>3874</td><td>单调贪心+三分</td><td>40</td><td>36</td><td>76</td><td>4</td></tr><tr><td>3990</td><td>暴力</td><td>40</td><td>36</td><td>76</td><td>7</td></tr><tr><td>3991</td><td>虚树+SET</td><td>35</td><td>41</td><td>76</td><td>8</td></tr><tr><td>4128</td><td>矩阵求逆</td><td>38</td><td>38</td><td>76</td><td>4</td></tr><tr><td>4238</td><td>生成树找环讨论</td><td>41</td><td>35</td><td>76</td><td></td></tr><tr><td>4260</td><td>(可持久化)Trie树</td><td>36</td><td>40</td><td>76</td><td></td></tr><tr><td>4380</td><td>区间DP</td><td>40</td><td>36</td><td>76</td><td></td></tr><tr><td>4381</td><td>分块暴力</td><td>36</td><td>40</td><td>76</td><td></td></tr><tr><td>1023</td><td>仙人掌求直径</td><td>38</td><td>39</td><td>77</td><td>6</td></tr><tr><td>1178</td><td>线段扫描+贪心+倍增预处理</td><td>40</td><td>37</td><td>77</td><td>8</td></tr><tr><td>1199</td><td>K-D树</td><td>35</td><td>42</td><td>77</td><td>6</td></tr><tr><td>1294</td><td>射线法+BFS</td><td>40</td><td>37</td><td>77</td><td>8</td></tr><tr><td>1493</td><td>线段树染色+讨论</td><td>36</td><td>41</td><td>77</td><td>7</td></tr><tr><td>2003</td><td>搜索+剪枝</td><td>41</td><td>36</td><td>77</td><td>6</td></tr><tr><td>2006</td><td>RMQ+堆</td><td>39</td><td>38</td><td>77</td><td>8</td></tr><tr><td>2228</td><td>DP+单调队列</td><td>41</td><td>36</td><td>77</td><td>8</td></tr><tr><td>2436</td><td>DP+单调优化</td><td>42</td><td>35</td><td>77</td><td>7</td></tr><tr><td>2595</td><td>斯坦纳树</td><td>35</td><td>42</td><td>77</td><td>7</td></tr><tr><td>2754</td><td>AC自动机</td><td>38</td><td>39</td><td>77</td><td>6</td></tr><tr><td>2756</td><td>二分+网络流</td><td>40</td><td>37</td><td>77</td><td>7</td></tr><tr><td>2811</td><td>贪心</td><td>40</td><td>37</td><td>77</td><td>7</td></tr><tr><td>2879</td><td>费用流动态加边</td><td>41</td><td>36</td><td>77</td><td>8</td></tr><tr><td>3064</td><td>线段树</td><td>34</td><td>43</td><td>77</td><td>7</td></tr><tr><td>3110</td><td>树套树</td><td>35</td><td>42</td><td>77</td><td>8</td></tr><tr><td>3123</td><td>DFS序可持久化线段树启发并</td><td>34</td><td>43</td><td>77</td><td>8</td></tr><tr><td>3131</td><td>数位DP+堆</td><td>39</td><td>38</td><td>77</td><td>7</td></tr><tr><td>3168</td><td>高斯求逆+二分图匹配</td><td>40</td><td>37</td><td>77</td><td>6</td></tr><tr><td>3243</td><td>随机化构造</td><td>40</td><td>37</td><td>77</td><td>2</td></tr><tr><td>3244</td><td>DFS序+统计答案</td><td>45</td><td>32</td><td>77</td><td>6</td></tr><tr><td>3438</td><td>最小割</td><td>42</td><td>35</td><td>77</td><td>8</td></tr><tr><td>3439</td><td>Trie+DFS序主席树</td><td>36</td><td>41</td><td>77</td><td>7</td></tr><tr><td>3504</td><td>网络流</td><td>41</td><td>36</td><td>77</td><td>5</td></tr><tr><td>3527</td><td>FFT</td><td>37</td><td>40</td><td>77</td><td>8</td></tr><tr><td>3641</td><td>环套树剖分</td><td>35</td><td>42</td><td>77</td><td>8</td></tr><tr><td>3669</td><td>LCT维护MST</td><td>36</td><td>41</td><td>77</td><td>8</td></tr><tr><td>4011</td><td>朱刘算法推论+树形DP</td><td>43</td><td>34</td><td>77</td><td>7</td></tr><tr><td>4026</td><td>主席树</td><td>37</td><td>40</td><td>77</td><td>8</td></tr><tr><td>4151</td><td>树上DFS</td><td>44</td><td>33</td><td>77</td><td>7</td></tr><tr><td>4199</td><td>后缀树DP</td><td>37</td><td>40</td><td>77</td><td>8</td></tr><tr><td>4346</td><td>树形DP</td><td>39</td><td>38</td><td>77</td><td></td></tr><tr><td>4377</td><td>扫描处理范围</td><td>39</td><td>38</td><td>77</td><td></td></tr><tr><td>1038</td><td>模拟退火</td><td>39</td><td>39</td><td>78</td><td>5</td></tr><tr><td>1074</td><td>计算几何</td><td>38</td><td>40</td><td>78</td><td>7</td></tr><tr><td>1095</td><td>动态树分治</td><td>37</td><td>41</td><td>78</td><td>9</td></tr><tr><td>1187</td><td>插头DP</td><td>37</td><td>41</td><td>78</td><td>8</td></tr><tr><td>1210</td><td>插头DP</td><td>37</td><td>41</td><td>78</td><td>1</td></tr><tr><td>1502</td><td>辛普森积分</td><td>38</td><td>40</td><td>78</td><td>7</td></tr><tr><td>1559</td><td>AC自动机DP+暴力</td><td>37</td><td>41</td><td>78</td><td>3</td></tr><tr><td>1791</td><td>基环树找直径</td><td>37</td><td>41</td><td>78</td><td>8</td></tr><tr><td>1972</td><td>暴力</td><td>29</td><td>49</td><td>78</td><td>2</td></tr><tr><td>2127</td><td>最小割</td><td>42</td><td>36</td><td>78</td><td>7</td></tr><tr><td>2132</td><td>网络流</td><td>42</td><td>36</td><td>78</td><td>7</td></tr><tr><td>2139</td><td>贪心+最小生成树</td><td>46</td><td>32</td><td>78</td><td>7</td></tr><tr><td>2140</td><td>Trie+tarjan</td><td>42</td><td>36</td><td>78</td><td>8</td></tr><tr><td>2154</td><td>莫比乌斯反演</td><td>42</td><td>36</td><td>78</td><td>7</td></tr><tr><td>2229</td><td>分治+最小割</td><td>39</td><td>39</td><td>78</td><td>6</td></tr><tr><td>2286</td><td>虚树DP</td><td>37</td><td>41</td><td>78</td><td>7</td></tr><tr><td>2333</td><td>可并堆套可并堆</td><td>36</td><td>42</td><td>78</td><td>7</td></tr><tr><td>2428</td><td>模拟退火</td><td>41</td><td>37</td><td>78</td><td>5</td></tr><tr><td>2539</td><td>KM</td><td>37</td><td>41</td><td>78</td><td>3</td></tr><tr><td>2564</td><td>凸包</td><td>43</td><td>35</td><td>78</td><td>4</td></tr><tr><td>2594</td><td>离线LCT维护动态MST</td><td>36</td><td>42</td><td>78</td><td>8</td></tr><tr><td>2730</td><td>双联通分量</td><td>40</td><td>38</td><td>78</td><td>7</td></tr><tr><td>3125</td><td>插头DP</td><td>37</td><td>41</td><td>78</td><td>7</td></tr><tr><td>3129</td><td>扩展lucas+容斥</td><td>38</td><td>40</td><td>78</td><td>8</td></tr><tr><td>3158</td><td>网络流</td><td>42</td><td>36</td><td>78</td><td>7</td></tr><tr><td>3196</td><td>树套树</td><td>32</td><td>46</td><td>78</td><td>9</td></tr><tr><td>3241</td><td>分类讨论DP</td><td>39</td><td>39</td><td>78</td><td>2</td></tr><tr><td>3246</td><td>树形DP</td><td>40</td><td>38</td><td>78</td><td>7</td></tr><tr><td>3530</td><td>AC自动机+数位DP</td><td>39</td><td>39</td><td>78</td><td>7</td></tr><tr><td>3577</td><td>网络流RMQ构图</td><td>40</td><td>38</td><td>78</td><td>7</td></tr><tr><td>3619</td><td>BFS构造+暴力</td><td>37</td><td>41</td><td>78</td><td>8</td></tr><tr><td>3678</td><td>Splay</td><td>35</td><td>43</td><td>78</td><td>6</td></tr><tr><td>4006</td><td>斯坦纳树</td><td>35</td><td>43</td><td>78</td><td>7</td></tr><tr><td>4035</td><td>博弈</td><td>45</td><td>33</td><td>78</td><td>7</td></tr><tr><td>4313</td><td>DP</td><td>43</td><td>35</td><td>78</td><td>7</td></tr><tr><td>4373</td><td>线段树</td><td>40</td><td>38</td><td>78</td><td></td></tr><tr><td>4399</td><td>线段树合并</td><td>35</td><td>43</td><td>78</td><td></td></tr><tr><td>1999&amp;2282</td><td>树上DFS+单调队列</td><td>40</td><td>38</td><td>78</td><td>7</td></tr><tr><td>3157&amp;3516</td><td>数学</td><td>45</td><td>33</td><td>78</td><td>6</td></tr><tr><td>1011</td><td>乱搞</td><td>49</td><td>30</td><td>79</td><td>2</td></tr><tr><td>1064</td><td>图论分类讨论</td><td>43</td><td>36</td><td>79</td><td>8</td></tr><tr><td>1494</td><td>最小表示法+矩阵乘法</td><td>38</td><td>41</td><td>79</td><td>7</td></tr><tr><td>1495</td><td>树形DP</td><td>41</td><td>38</td><td>79</td><td>7</td></tr><tr><td>1565</td><td>拓扑+最小割</td><td>42</td><td>37</td><td>79</td><td>8</td></tr><tr><td>1969</td><td>LCT维护边双</td><td>37</td><td>42</td><td>79</td><td>7</td></tr><tr><td>2137</td><td>分类讨论+求K次幂前缀和</td><td>39</td><td>40</td><td>79</td><td>6</td></tr><tr><td>2170</td><td>插头DP</td><td>38</td><td>41</td><td>79</td><td>7</td></tr><tr><td>2324</td><td>Floyd+费用流</td><td>42</td><td>37</td><td>79</td><td>8</td></tr><tr><td>2437</td><td>二分图+判断</td><td>43</td><td>36</td><td>79</td><td>8</td></tr><tr><td>2668</td><td>费用流</td><td>44</td><td>35</td><td>79</td><td>8</td></tr><tr><td>2669</td><td>DP+搜索容斥</td><td>42</td><td>37</td><td>79</td><td>6</td></tr><tr><td>2876</td><td>二分+数学</td><td>46</td><td>33</td><td>79</td><td>5</td></tr><tr><td>3242</td><td>环套树DP</td><td>38</td><td>41</td><td>79</td><td>7</td></tr><tr><td>3571</td><td>分治+KM</td><td>40</td><td>39</td><td>79</td><td>6</td></tr><tr><td>3611</td><td>虚树DP</td><td>37</td><td>42</td><td>79</td><td>8</td></tr><tr><td>3873</td><td>悬线法+根号分类讨论</td><td>39</td><td>40</td><td>79</td><td>6</td></tr><tr><td>3876</td><td>费用流</td><td>43</td><td>36</td><td>79</td><td>7</td></tr><tr><td>3935</td><td>单纯形</td><td>40</td><td>39</td><td>79</td><td>6</td></tr><tr><td>4005</td><td>数形结合</td><td>47</td><td>32</td><td>79</td><td>6</td></tr><tr><td>4336</td><td>树剖套set</td><td>33</td><td>46</td><td>79</td><td>6</td></tr><tr><td>4345</td><td>堆</td><td>41</td><td>38</td><td>79</td><td></td></tr><tr><td>4358</td><td>分块+并查集</td><td>40</td><td>39</td><td>79</td><td></td></tr><tr><td>4361</td><td>DP+BIT优化+容斥</td><td>45</td><td>34</td><td>79</td><td></td></tr><tr><td>1018</td><td>线段树维护连通性+大力讨论</td><td>37</td><td>43</td><td>80</td><td>8</td></tr><tr><td>1492</td><td>CDQ分治优化DP</td><td>40</td><td>40</td><td>80</td><td>8</td></tr><tr><td>1926</td><td>分块+莫队</td><td>36</td><td>44</td><td>80</td><td>7</td></tr><tr><td>2000</td><td>双端链表</td><td>44</td><td>36</td><td>80</td><td>8</td></tr><tr><td>2034</td><td>贪心调整</td><td>47</td><td>33</td><td>80</td><td>7</td></tr><tr><td>2159</td><td>二项式定理斯特林+树DP</td><td>45</td><td>35</td><td>80</td><td>7</td></tr><tr><td>2441</td><td>BIT+扫描线</td><td>40</td><td>40</td><td>80</td><td>3</td></tr><tr><td>2547</td><td>二分BFS+匈牙利</td><td>41</td><td>39</td><td>80</td><td>6</td></tr><tr><td>2707</td><td>tarjan+期望高斯</td><td>40</td><td>40</td><td>80</td><td>8</td></tr><tr><td>2734</td><td>状压DP</td><td>47</td><td>33</td><td>80</td><td>7</td></tr><tr><td>2741</td><td>分块+可持久化Trie</td><td>38</td><td>42</td><td>80</td><td>7</td></tr><tr><td>3513</td><td>FFT</td><td>40</td><td>40</td><td>80</td><td>8</td></tr><tr><td>3533</td><td>线段树+凸壳三分</td><td>37</td><td>43</td><td>80</td><td>6</td></tr><tr><td>3561</td><td>莫比乌斯反演</td><td>44</td><td>36</td><td>80</td><td>8</td></tr><tr><td>3720</td><td>块状树</td><td>37</td><td>43</td><td>80</td><td>7</td></tr><tr><td>3743</td><td>树形DP</td><td>38</td><td>42</td><td>80</td><td>7</td></tr><tr><td>4025</td><td>LCT维护二分图</td><td>37</td><td>43</td><td>80</td><td>7</td></tr><tr><td>4032</td><td>后缀自动机+序列自动机+BFS</td><td>40</td><td>40</td><td>80</td><td>7</td></tr><tr><td>4154</td><td>K-D树</td><td>37</td><td>43</td><td>80</td><td>8</td></tr><tr><td>4155</td><td>网络流+bitset压位DP</td><td>40</td><td>40</td><td>80</td><td>5</td></tr><tr><td>4242</td><td>BFS建图+货车运输</td><td>39</td><td>41</td><td>80</td><td>8</td></tr><tr><td>4317</td><td>动态树分治</td><td>37</td><td>43</td><td>80</td><td>6</td></tr><tr><td>4386</td><td>矩阵乘法</td><td>41</td><td>39</td><td>80</td><td>8</td></tr></tbody></table></div><p><br><br></p><div class="table-container"><table><thead><tr><th>题号</th><th>算法</th><th>思想难度</th><th>实现难度</th><th>总难度</th><th>推荐指数</th></tr></thead><tbody><tr><td>1033</td><td>模拟</td><td>31</td><td>50</td><td>81</td><td>8</td></tr><tr><td>1094</td><td>计算几何</td><td>39</td><td>42</td><td>81</td><td>7</td></tr><tr><td>1200</td><td>贪心+DP</td><td>47</td><td>34</td><td>81</td><td>8</td></tr><tr><td>2039</td><td>最小割</td><td>44</td><td>37</td><td>81</td><td>7</td></tr><tr><td>2331</td><td>插头DP</td><td>39</td><td>42</td><td>81</td><td>5</td></tr><tr><td>2433</td><td>计算几何+最短路</td><td>43</td><td>38</td><td>81</td><td>7</td></tr><tr><td>2459</td><td>线段树维护连通性+大力讨论</td><td>37</td><td>44</td><td>81</td><td>7</td></tr><tr><td>2548</td><td>暴力模拟</td><td>30</td><td>51</td><td>81</td><td>7</td></tr><tr><td>2726</td><td>CDQ分治优化DP</td><td>41</td><td>40</td><td>81</td><td>6</td></tr><tr><td>2806</td><td>广义后缀自动机+DP单调优化</td><td>41</td><td>40</td><td>81</td><td>8</td></tr><tr><td>3309</td><td>莫比乌斯反演+推性质</td><td>44</td><td>37</td><td>81</td><td>7</td></tr><tr><td>3677</td><td>树形DP</td><td>43</td><td>38</td><td>81</td><td>6</td></tr><tr><td>3786</td><td>Splay维护括号序列</td><td>38</td><td>43</td><td>81</td><td>6</td></tr><tr><td>3811</td><td>线性基+暴力</td><td>44</td><td>37</td><td>81</td><td>7</td></tr><tr><td>3925</td><td>子集DP</td><td>46</td><td>35</td><td>81</td><td>8</td></tr><tr><td>4016</td><td>Dijkstra+树分治</td><td>37</td><td>44</td><td>81</td><td>5</td></tr><tr><td>4036</td><td>反演子集求概率</td><td>50</td><td>31</td><td>81</td><td>7</td></tr><tr><td>4180</td><td>后缀自动机+倍增DP</td><td>41</td><td>40</td><td>81</td><td>6</td></tr><tr><td>4311</td><td>分治线段树挂链+凸壳三分</td><td>38</td><td>43</td><td>81</td><td>8</td></tr><tr><td>4372</td><td>动态树分治+BIT</td><td>37</td><td>44</td><td>81</td><td>6</td></tr><tr><td>4383</td><td>线段树挂链</td><td>39</td><td>42</td><td>81</td><td></td></tr><tr><td>2961&amp;4140</td><td>二进制分组+凸壳三分</td><td>39</td><td>42</td><td>81</td><td>8</td></tr><tr><td>1758</td><td>树分治+二分+单调队列</td><td>39</td><td>43</td><td>82</td><td>8</td></tr><tr><td>1797</td><td>最小割+tarjan判断</td><td>43</td><td>39</td><td>82</td><td>7</td></tr><tr><td>1835</td><td>线段树优化DP</td><td>43</td><td>39</td><td>82</td><td>8</td></tr><tr><td>2125</td><td>静态仙人掌</td><td>39</td><td>43</td><td>82</td><td>7</td></tr><tr><td>2780</td><td>广义后缀自动机+离线BIT</td><td>40</td><td>42</td><td>82</td><td>8</td></tr><tr><td>2960</td><td>平面图转对偶图+最小树形图</td><td>36</td><td>46</td><td>82</td><td>7</td></tr><tr><td>3232</td><td>二分+网络流</td><td>45</td><td>37</td><td>82</td><td>7</td></tr><tr><td>3529</td><td>莫比乌斯反演+离线树状数组</td><td>43</td><td>39</td><td>82</td><td>8</td></tr><tr><td>3532</td><td>网络流</td><td>44</td><td>38</td><td>82</td><td>8</td></tr><tr><td>3879</td><td>后缀树+虚树</td><td>36</td><td>46</td><td>82</td><td>6</td></tr><tr><td>4129</td><td>树上带修莫队+权值分块</td><td>38</td><td>44</td><td>82</td><td>8</td></tr><tr><td>4197</td><td>状压DP</td><td>45</td><td>37</td><td>82</td><td>8</td></tr><tr><td>4246</td><td>极角排序扫描统计贡献</td><td>45</td><td>37</td><td>82</td><td></td></tr><tr><td>4310</td><td>二分+后缀树</td><td>40</td><td>42</td><td>82</td><td>7</td></tr><tr><td>4384</td><td>乱搞+Cheat</td><td>45</td><td>37</td><td>82</td><td></td></tr><tr><td>1974</td><td>转化后DP</td><td>46</td><td>37</td><td>83</td><td>8</td></tr><tr><td>2001</td><td>动态MST</td><td>40</td><td>43</td><td>83</td><td>8</td></tr><tr><td>2126</td><td>转化后状压矩乘</td><td>45</td><td>38</td><td>83</td><td>8</td></tr><tr><td>2671</td><td>莫比乌斯反演</td><td>47</td><td>36</td><td>83</td><td>6</td></tr><tr><td>2959</td><td>LCT维护边双</td><td>39</td><td>44</td><td>83</td><td>8</td></tr><tr><td>3218</td><td>主席树优化网络流</td><td>42</td><td>41</td><td>83</td><td>8</td></tr><tr><td>3229</td><td>石子合并加强</td><td>48</td><td>35</td><td>83</td><td>3</td></tr><tr><td>3482</td><td>分层图最短路+单调统计</td><td>42</td><td>41</td><td>83</td><td>8</td></tr><tr><td>3994</td><td>莫比乌斯反演</td><td>46</td><td>37</td><td>83</td><td>7</td></tr><tr><td>3995</td><td>线段树维护连通性</td><td>38</td><td>45</td><td>83</td><td>7</td></tr><tr><td>4092</td><td>DP</td><td>47</td><td>36</td><td>83</td><td>8</td></tr><tr><td>2209&amp;2329</td><td>Splay大力维护</td><td>39</td><td>44</td><td>83</td><td>8</td></tr><tr><td>1558</td><td>线段树大力维护</td><td>41</td><td>43</td><td>84</td><td>8</td></tr><tr><td>2434</td><td>AC自动机+FAIL树状数组</td><td>43</td><td>41</td><td>84</td><td>8</td></tr><tr><td>2878</td><td>基环树DP</td><td>41</td><td>43</td><td>84</td><td>7</td></tr><tr><td>3160</td><td>FFT+Manacher</td><td>42</td><td>42</td><td>84</td><td>8</td></tr><tr><td>3637</td><td>有向LCT维护虚边</td><td>40</td><td>44</td><td>84</td><td>8</td></tr><tr><td>3672</td><td>树剖+凸壳三分</td><td>39</td><td>45</td><td>84</td><td>8</td></tr><tr><td>3681</td><td>主席树合并优化网络流</td><td>43</td><td>41</td><td>84</td><td>8</td></tr><tr><td>3730</td><td>动态树分治+动态开点线段树</td><td>38</td><td>46</td><td>84</td><td>7</td></tr><tr><td>3745</td><td>单调队列+线段树大力维护</td><td>40</td><td>44</td><td>84</td><td>7</td></tr><tr><td>4134</td><td>博弈+Trie合并</td><td>44</td><td>40</td><td>84</td><td>7</td></tr><tr><td>4367</td><td>主席树</td><td>42</td><td>42</td><td>84</td><td>8</td></tr><tr><td>4389</td><td>LCT维护虚边</td><td>38</td><td>46</td><td>84</td><td>8</td></tr><tr><td>4402</td><td>计数</td><td>45</td><td>39</td><td>84</td><td></td></tr><tr><td>2613</td><td>置换+构造</td><td>46</td><td>39</td><td>85</td><td>6</td></tr><tr><td>2651</td><td>树形DP</td><td>40</td><td>45</td><td>85</td><td>7</td></tr><tr><td>2815</td><td>LCA重构树</td><td>47</td><td>38</td><td>85</td><td>7</td></tr><tr><td>3514</td><td>LCT维护MST+主席树</td><td>40</td><td>45</td><td>85</td><td>8</td></tr><tr><td>3591</td><td>状压DP</td><td>50</td><td>35</td><td>85</td><td>8</td></tr><tr><td>3616</td><td>K-D树+BITSET</td><td>41</td><td>44</td><td>85</td><td>8</td></tr><tr><td>3640</td><td>高斯求逆优化</td><td>48</td><td>37</td><td>85</td><td>8</td></tr><tr><td>3817</td><td>类欧几里得</td><td>50</td><td>35</td><td>85</td><td>6</td></tr><tr><td>4066</td><td>K-D树+重建</td><td>37</td><td>48</td><td>85</td><td>8</td></tr><tr><td>1065</td><td>环套树DP</td><td>48</td><td>38</td><td>86</td><td>8</td></tr><tr><td>2555</td><td>后缀自动机+LCT</td><td>38</td><td>48</td><td>86</td><td>8</td></tr><tr><td>3519</td><td>Set大力维护</td><td>36</td><td>50</td><td>86</td><td>8</td></tr><tr><td>3572</td><td>虚树</td><td>39</td><td>47</td><td>86</td><td>8</td></tr><tr><td>3812</td><td>DP+容斥</td><td>50</td><td>36</td><td>86</td><td>7</td></tr><tr><td>3992</td><td>NTT+DP快速幂优化</td><td>45</td><td>41</td><td>86</td><td>8</td></tr><tr><td>4379</td><td>树形DP</td><td>40</td><td>46</td><td>86</td><td></td></tr><tr><td>1414</td><td>Manacher+RMQ+单调队列</td><td>46</td><td>41</td><td>87</td><td>8</td></tr><tr><td>2040</td><td>树剖+线段树模拟费用流</td><td>39</td><td>48</td><td>87</td><td>7</td></tr><tr><td>3461</td><td>CDQ分治优化DP</td><td>46</td><td>41</td><td>87</td><td>8</td></tr><tr><td>3489</td><td>三维K-D树</td><td>43</td><td>44</td><td>87</td><td>8</td></tr><tr><td>3639</td><td>有向LCT维护虚边</td><td>41</td><td>46</td><td>87</td><td>8</td></tr><tr><td>4012</td><td>可持久化树链剖分</td><td>40</td><td>47</td><td>87</td><td>8</td></tr><tr><td>3237&amp;3563&amp;3569</td><td>随机化造树+线性基</td><td>50</td><td>37</td><td>87</td><td>8</td></tr><tr><td>3065</td><td>替罪羊树套权值线段树</td><td>39</td><td>49</td><td>88</td><td>9</td></tr><tr><td>3413</td><td>后缀树+主席树</td><td>42</td><td>46</td><td>88</td><td>8</td></tr><tr><td>3512</td><td>杜教筛+莫比乌斯反演</td><td>51</td><td>37</td><td>88</td><td>8</td></tr><tr><td>3600</td><td>替罪羊树+线段树</td><td>46</td><td>42</td><td>88</td><td>8</td></tr><tr><td>4545</td><td>后缀自动机+LCT</td><td>39</td><td>49</td><td>88</td><td>8</td></tr><tr><td>1062</td><td>树状数组</td><td>51</td><td>38</td><td>89</td><td>8</td></tr><tr><td>2144</td><td>转化为LCA后二分+快速统计</td><td>53</td><td>36</td><td>89</td><td>8</td></tr><tr><td>2149</td><td>CDQ分治优化DP</td><td>46</td><td>43</td><td>89</td><td>8</td></tr><tr><td>2653</td><td>按值建主席树</td><td>43</td><td>46</td><td>89</td><td>8</td></tr><tr><td>3551</td><td>Kruskal重构树+DFS序主席树</td><td>49</td><td>40</td><td>89</td><td>8</td></tr><tr><td>4382</td><td>HASH+单调扫描</td><td>50</td><td>39</td><td>89</td><td></td></tr><tr><td>2162</td><td>转化后网络流+容斥DP</td><td>51</td><td>39</td><td>90</td><td>8</td></tr><tr><td>3814</td><td>插头DP</td><td>41</td><td>49</td><td>90</td><td>7</td></tr><tr><td>1020</td><td>迭代法+射线法+点到线段距离</td><td>43</td><td>48</td><td>91</td><td>8</td></tr><tr><td>4348</td><td>暴力</td><td>41</td><td>50</td><td>91</td><td>8</td></tr><tr><td>2566</td><td>动态树分治+map套set</td><td>41</td><td>51</td><td>92</td><td>7</td></tr><tr><td>2965</td><td>平面图转对偶图+枚举+最小割</td><td>43</td><td>51</td><td>94</td><td>8</td></tr><tr><td>2658</td><td>fhqtreap</td><td>52</td><td>43</td><td>95</td><td>8</td></tr><tr><td>2759</td><td>LCT维护环套树大力讨论</td><td>48</td><td>48</td><td>96</td><td>8</td></tr></tbody></table></div><p><br><br></p><p><strong>转自<a href="http://lbn187.is-programmer.com/2015/5/16/bzoj.93165.html" target="_blank" rel="external">BZOJ刷题记录</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;学习一天可做&quot;&gt;&lt;a href=&quot;#学习一天可做&quot; class=&quot;headerlink&quot; title=&quot;学习一天可做&quot;&gt;&lt;/a&gt;学习一天可做&lt;/h3&gt;&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;题号
      
    
    </summary>
    
      <category term="BZOJ" scheme="http://tkandi.github.io/categories/BZOJ/"/>
    
    
      <category term="题目列表" scheme="http://tkandi.github.io/tags/problem-list/"/>
    
  </entry>
  
  <entry>
    <title>最长上升子序列</title>
    <link href="http://tkandi.github.io/2017/10/16/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://tkandi.github.io/2017/10/16/最长上升子序列/</id>
    <published>2017-10-16T08:30:00.000Z</published>
    <updated>2017-10-19T10:16:24.993Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 最长上升子序列（longest increasing subsequence） </strong>，是动态规划中一个经典的问题。<br>定义如下：对于一个序列$A_1 \cdots A_i \cdots A_n$，子序列$A_{b_1} \cdots A_{b_i} \cdots A_{b_len}$满足：$B_i \lt B_{i+1} \ (foreach \  1 \le i \lt len)$，$A_{B_i} \lt A_{B_{i+1}} \ (foreach \  1 \le i \lt len)$，且$len$最大，则子序列$A_{b_1} \cdots A_{b_i} \cdots A_{b_len}$是序列$A_1 \cdots A_i \cdots A_n$的最长上升子序列。</p><ol><li><p>第一种DP，$f[i]$代表$i$作为子序列的最后一个元素的最长上升子序列长度。$f[i]$转移的话可以枚举它前面的那个元素，所以有以下转移：$f[i] = max{f[j] + 1} \  (1 \le j \lt i \ \&amp; \&amp; \  a[i] \lt a[j])$。这个DP是状态一维，转移一维的，所以时间复杂度为$O(n^2)$。<br>对于这种DP，还可以用数据结构优化，平衡树或者离散+线段树（或树状数组），优化后的时间复杂度都是$O(nlog_{2}n)$。<br>关于方案的话，只要记录$pre[i]$为$i$从前面转移过来的位置。</p></li><li><p>第二种DP，$c[i]$代表上升子序列长度为$i$时，最后一个元素的最小值，$len$为最长上升子序列长度。考虑一个个把原序列的元素加入，对于当前的第$i$个元素，在之前的状态下找到一个最大的$j$，满足$c[j - 1] &lt; a[i] \  (1 \le j \  \&amp; \&amp; \  j \le len + 1)$，以它为最后一个元素的最长上升子序列就是以第$j$个元素为最后一个元素的最长上升子序列加上当前的第$i$个元素。因为随着上升子序列的变长，它的最后一个元素的值会越来越大，所以$c$数组是单调的，所以$j = lower \underline{} bound(c + 1, c + len + 1, a[i])$。<br>关于方案的话，$c[j - 1]$在原序列的位置就是$pre[i]$。</p></li></ol><p>最长下降子序列，最长不上升子序列，最长下降子序列也类似可求。</p><p>以下是最长上升子序列。<br>$a$数组是原序列，$n$是序列长度，$c$是辅助数组。</p><pre><code class="lang-cpp">int LIS(int *a, int n, int *c) {    int len = 0;    for (int i = 1; i &lt;= n; ++i) {        int j = lower_bound(c + 1, c + len + 1, a[i]) - c;        c[j] = a[i];        if (len &lt; j) len = j;    }    return len;}</code></pre><p><br><br></p><h1 id="合唱队形"><a href="#合唱队形" class="headerlink" title="合唱队形"></a><a href="https://www.luogu.org/problem/show?pid=1091" target="_blank" rel="external">合唱队形</a></h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title=" 题目描述 "></a><strong> 题目描述 </strong></h2><blockquote><p>$n$位同学站成一排，音乐老师要请其中的$(n - k)$位同学出列，使得剩下的K位同学排成合唱队形。<br>合唱队形是指这样的一种队形：设$k$位同学从左到右依次编号为$1, 2, \cdots , k$，他们的身高分别为$t_1, t_2, \cdots , t_k$， 则他们的身高满足$t_1 \lt \cdots \lt t_i \gt t_{i+1} \gt \cdots \gt t_k \  (1 \le i \le k)$。<br>你的任务是，已知所有$n$位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。</p></blockquote><h2 id="输入格式"><a href="#输入格式" class="headerlink" title=" 输入格式 "></a><strong> 输入格式 </strong></h2><blockquote><p>输入第一行是一个整数$n$，表示同学的总数。第一行有$n$个整数，用空格分隔，第i个整数$t_i \  (130 \le t_i \le 230)$是第$i$位同学的身高。</p></blockquote><h2 id="输出格式"><a href="#输出格式" class="headerlink" title=" 输出格式 "></a><strong> 输出格式 </strong></h2><blockquote><p>输出包括一行，这一行只包含一个整数，就是最少需要几位同学出列。</p></blockquote><h2 id="输入样例"><a href="#输入样例" class="headerlink" title=" 输入样例 "></a><strong> 输入样例 </strong></h2><blockquote><p>8<br>186 186 150 200 160 130 197 220</p></blockquote><h2 id="输出样例"><a href="#输出样例" class="headerlink" title=" 输出样例 "></a><strong> 输出样例 </strong></h2><blockquote><p>4</p></blockquote><h2 id="说明"><a href="#说明" class="headerlink" title=" 说明 "></a><strong> 说明 </strong></h2><blockquote><p>对于50％的数据，保证有$n \le 20$；<br>对于全部的数据，保证有$n \le 100$。</p></blockquote><h2 id="题解"><a href="#题解" class="headerlink" title=" 题解 "></a><strong> 题解 </strong></h2><blockquote><p>为了让更少的同学出列，应计算出最长的合唱队形。<br>分别从前往后和从后往前做两遍最长上升子序列，算出每个同学作为最后一个元素的最长上升子序列$f[i]$和第一个元素的最长下降子序列$g[i]$，那么第$i$个同学作为中间最高的最长合唱队形的长度为$f[i] + g[i] - 1$。<br>因为本题数据范围很小，上述所以方法都可以过。<br>时间复杂度为$n^2$或$O(nlog_{2}n)$。</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title=" 代码 "></a><strong> 代码 </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;const int N = 110;int n;int t[N], f[N], g[N];int main() {    scanf(&quot;%d&quot;, &amp;n);    for (int i = 1; i &lt;= n; ++i)        scanf(&quot;%d&quot;, &amp;t[i]);    for (int i = 1; i &lt;= n; ++i) {        f[i] = 1;        for (int j = 1; j &lt; i; ++j)            if (t[j] &lt; t[i] &amp;&amp; f[j] &gt;= f[i]) f[i] = f[j] + 1;    }    for (int i = n; i &gt;= 1; --i) {        g[i] = 1;        for (int j = n; j &gt; i; --j)            if (t[i] &gt; t[j] &amp;&amp; g[j] &gt;= g[i]) g[i] = g[j] + 1;    }    int res = 0;    for (int i = 1; i &lt;= n; ++i)        if (res &lt; f[i] + g[i] - 1) res = f[i] + g[i] - 1;    printf(&quot;%d\n&quot;, n - res);    return 0;}</code></pre><p><br><br></p><h1 id="导弹拦截"><a href="#导弹拦截" class="headerlink" title="导弹拦截"></a><a href="https://www.luogu.org/problem/show?pid=1020" target="_blank" rel="external">导弹拦截</a></h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title=" 题目描述 "></a><strong> 题目描述 </strong></h2><blockquote><p>某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。<br>输入导弹依次飞来的高度（雷达给出的高度数据是不大于$50000$的正整数），计算这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。</p></blockquote><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title=" 输入格式 "></a><strong> 输入格式 </strong></h2><blockquote><p>一行，若干个整数（个数少于$100000$）。</p></blockquote><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title=" 输出格式 "></a><strong> 输出格式 </strong></h2><blockquote><p>两行，每行一个整数，第一个数字表示这套系统最多能拦截多少导弹，第二个数字表示如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。</p></blockquote><h2 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title=" 输入样例 "></a><strong> 输入样例 </strong></h2><blockquote><p>389 207 155 300 299 170 158 65</p></blockquote><h2 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title=" 输出样例 "></a><strong> 输出样例 </strong></h2><blockquote><p>6<br>2</p></blockquote><h2 id="说明-1"><a href="#说明-1" class="headerlink" title=" 说明 "></a><strong> 说明 </strong></h2><blockquote><p>第一问直接做最长不下降子序列。<br>对于第二问，有以下贪心：对于当前的导弹，若目前所有的导弹拦截系统的高度都小于其高度，那么要新开一个导弹拦截系统，否则找到一个高度不小于它且高度最小的导弹拦截系统来拦截它。这样直接做是$O(n^2)$的，但是注意到当前所以导弹拦截系统的高度都是不下降的，每次找到一个第一个不小于它的导弹拦截系统来拦截它，这与我们的第二种DP是一样的，所以其实它就是原序列的最长上升子序列的长度。<br>时间复杂度为$O(nlog_{2}n)$。</p></blockquote><h2 id="标程"><a href="#标程" class="headerlink" title=" 标程 "></a><strong> 标程 </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;cstdio&gt;#include &lt;algorithm&gt;using namespace std;const int N = 100010;int n;int a[N], c[N];int main() {    for (n = 0; scanf(&quot;%d&quot;, &amp;a[n + 1]) == 1; ++n);    int len = 0;    for (int i = n; i; --i) {        int j = upper_bound(c + 1, c + len + 1, a[i]) - c;        c[j] = a[i];        if (len &lt; j) len = j;    }    printf(&quot;%d\n&quot;, len);    len = 0;    for (int i = 1; i &lt;= n; ++i) {        int j = lower_bound(c + 1, c + len + 1, a[i]) - c;        c[j] = a[i];        if (len &lt; j) len = j;    }    printf(&quot;%d\n&quot;, len);    return 0;}</code></pre><p><br><br></p><h1 id="Beautiful-People"><a href="#Beautiful-People" class="headerlink" title="Beautiful People"></a><a href="http://codeforces.com/gym/100199/problem/G" target="_blank" rel="external">Beautiful People</a></h1><p><center> Input file: people.in</center></p><p><center> Output file: people.out</center></p><p><center> Time limit: 1 second</center></p><h2 id="Description"><a href="#Description" class="headerlink" title=" Description "></a><strong> Description </strong></h2><blockquote><p>The most prestigious sports club in one city has exactly N members. Each of its members is strong and beautiful. More precisely, i-th member of this club (members being numbered by the time they entered the club) has strength Si and beauty Bi. Since this is a very prestigious club, its members are very rich and therefore extraordinary people, so they often extremely hate each other. Strictly speaking, i-th member of the club Mr X hates j-th member of the club Mr Y if $S_i \le S_j$ and $B_i \ge B_j$ or if $S_i \ge Sj$ and $B_i \le B_j$ (if both properties of Mr X are greater then corresponding properties of Mr Y, he doesn’t even notice him, on the other hand, if both of his properties are less, he respects Mr Y very much).<br>To celebrate a new 2003 year, the administration of the club is planning to organize a party. However they are afraid that if two people who hate each other would simultaneouly attend the party, after a drink or two they would start a fight. So no two people who hate each other should be invited. On the other hand, to keep the club prestige at the apropriate level, administration wants to invite as many people as possible.<br>Being the only one among administration who is not afraid of touching a computer, you are to write a program which would find out whom to invite to the party.</p></blockquote><h2 id="Input"><a href="#Input" class="headerlink" title=" Input "></a><strong> Input </strong></h2><blockquote><p>The first line of the input file contains integer N — the number of members of the club. $(2 \le N \le 100000)$. Next N lines contain two numbers each — Si and Bi respectively $(1 \le S_i, B_i \le 10^9)$.</p></blockquote><h2 id="Output"><a href="#Output" class="headerlink" title=" Output "></a><strong> Output </strong></h2><blockquote><p>On the first line of the output file print the maximum number of the people that can be invited to the party. On the second line output N integers — numbers of members to be invited in arbitrary order. If several solutions exist, output any one.</p></blockquote><h2 id="Example"><a href="#Example" class="headerlink" title=" Example "></a><strong> Example </strong></h2><h3 id="people-in"><a href="#people-in" class="headerlink" title=" people.in  "></a><strong> people.in  </strong></h3><blockquote><p>4<br>1 1<br>1 2<br>2 1<br>2 2</p></blockquote><h3 id="people-out"><a href="#people-out" class="headerlink" title=" people.out "></a><strong> people.out </strong></h3><blockquote><p>2<br>1 4</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><blockquote><p>这是一个二维的最长上升子序列问题，先对第一维排序，再对第二位做最长上升子序列。因为最后的子序列的第一维不能相同，所以我们排序时先对第一维从小到大排序，第一维相同的按第二卫从大到小排序，这样保证了第一维相同的第二维小的不会更新第二维大的，保证了算法的正确性。<br>这题还要输路径，与就是普通的输路径方法。<br>时间复杂度为$O(nlog_{2}n)$。</p></blockquote><h2 id="Standrad"><a href="#Standrad" class="headerlink" title=" Standrad "></a><strong> Standrad </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstring&gt;#include &lt;cstdio&gt;#include &lt;algorithm&gt;using namespace std;inline void FO() {    freopen(&quot;people.in&quot;, &quot;r&quot;, stdin);    freopen(&quot;people.out&quot;, &quot;w&quot;, stdout);    return;}const int N = 100010, INF = 0x7fffffff;int n, len;int pre[N], from[N], c[N];struct Node {    int s, b, idx;    bool operator &lt; (const Node &amp;a) const {        return (s != a.s) ? (s &lt; a.s) : (b &gt; a.b);    }} a[N];int main() {    FO();    scanf(&quot;%d&quot;, &amp;n);    for (int i = 1; i &lt;= n; ++i) {        scanf(&quot;%d%d&quot;, &amp;a[i].s, &amp;a[i].b);        a[i].idx = i;    }    sort(a + 1, a + n + 1);    for (int i = 1; i &lt;= n; ++i) {        int k = lower_bound(c + 1, c + len + 1, a[i].b) - c;        c[k] = a[i].b;        from[k] = i;        pre[i] = from[k - 1];        if (len &lt; k) len = k;    }    printf(&quot;%d\n&quot;, len);    for (int i = from[len]; i; i = pre[i])        printf(&quot;%d &quot;, a[i].idx);    putchar(&#39;\n&#39;);    return 0;}</code></pre><p><br><br></p><h1 id="Longest-Increasing-Subsequence"><a href="#Longest-Increasing-Subsequence" class="headerlink" title="Longest Increasing Subsequence"></a><a href="http://codeforces.com/problemset/problem/568/E" target="_blank" rel="external">Longest Increasing Subsequence</a></h1><p><center> time limit per test1.5 seconds</center></p><p><center> memory limit per test128 megabytes</center></p><p><center> inputstandard input</center></p><p><center> outputstandard output</center></p><h2 id="Description-1"><a href="#Description-1" class="headerlink" title=" Description "></a><strong> Description </strong></h2><blockquote><p>Note that the memory limit in this problem is less than usual.<br>Let’s consider an array consisting of positive integers, some positions of which contain gaps.<br>We have a collection of numbers that can be used to fill the gaps. Each number from the given collection can be used at most once.<br>Your task is to determine such way of filling gaps that the longest increasing subsequence in the formed array has a maximum size.</p></blockquote><h2 id="Input-1"><a href="#Input-1" class="headerlink" title=" Input "></a><strong> Input </strong></h2><blockquote><p>The first line contains a single integer $n$ — the length of the array $(1 \le n \le 10^5)$.<br>The second line contains $n$ space-separated integers — the elements of the sequence. A gap is marked as “-1”. The elements that are not gaps are positive integers not exceeding $10^9$. It is guaranteed that the sequence contains $0 \le k \le 1000$ gaps.<br>The third line contains a single positive integer $m$ — the number of elements to fill the gaps $(k \le m \le 10^5)$.<br>The fourth line contains $m$ positive integers — the numbers to fill gaps. Each number is a positive integer not exceeding $10^9$. Some numbers may be equal.</p></blockquote><h2 id="Output-1"><a href="#Output-1" class="headerlink" title=" Output "></a><strong> Output </strong></h2><blockquote><p>Print $n$ space-separated numbers in a single line — the resulting sequence. If there are multiple possible answers, print any of them.</p></blockquote><h2 id="Examples"><a href="#Examples" class="headerlink" title=" Examples "></a><strong> Examples </strong></h2><h3 id="input"><a href="#input" class="headerlink" title=" input "></a><strong> input </strong></h3><blockquote><p>3<br>1 2 3<br>1<br>10</p></blockquote><h3 id="output"><a href="#output" class="headerlink" title=" output "></a><strong> output </strong></h3><blockquote><p>1 2 3</p></blockquote><h3 id="input-1"><a href="#input-1" class="headerlink" title=" input "></a><strong> input </strong></h3><blockquote><p>3<br>1 -1 3<br>3<br>1 2 3</p></blockquote><h3 id="output-1"><a href="#output-1" class="headerlink" title=" output "></a><strong> output </strong></h3><blockquote><p>1 2 3</p></blockquote><h3 id="input-2"><a href="#input-2" class="headerlink" title=" input "></a><strong> input </strong></h3><blockquote><p>2<br>-1 2<br>2<br>2 4</p></blockquote><h3 id="output-2"><a href="#output-2" class="headerlink" title=" output "></a><strong> output </strong></h3><blockquote><p>2 2</p></blockquote><h3 id="input-3"><a href="#input-3" class="headerlink" title=" input "></a><strong> input </strong></h3><blockquote><p>3<br>-1 -1 -1<br>5<br>1 1 1 1 2</p></blockquote><h3 id="output-3"><a href="#output-3" class="headerlink" title=" output "></a><strong> output </strong></h3><blockquote><p>1 1 2</p></blockquote><h3 id="input-4"><a href="#input-4" class="headerlink" title=" input "></a><strong> input </strong></h3><blockquote><p>4<br>-1 -1 -1 2<br>4<br>1 1 2 2</p></blockquote><h3 id="output-4"><a href="#output-4" class="headerlink" title=" output "></a><strong> output </strong></h3><blockquote><p>1 2 1 2</p></blockquote><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><blockquote><p>因为一个最长上升子序列中不会有重复的数，所以可以假设可填的数可以用多次，就先把可填的数排序。<br>用第二种DP。1. 对于原来就有的位置，直接$lower \underline{} bound$求。2. 对于空缺的位置，可以一次$O(n)$求出所有可填的数的$lower \underline{} bound$。<br>安排最长上升子序列的空缺位置后，随意安排剩下的空缺的位置。<br>时间复杂度为$O(nlog_{2}n + mlog_{2}m + k \times m)$。</p></blockquote><h2 id="Standrad-1"><a href="#Standrad-1" class="headerlink" title=" Standrad "></a><strong> Standrad </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;algorithm&gt;using namespace std;const int N = 100010, INF = 0x7fffffff;int n, m, len;int a[N], b[N], c[N], pre[N], from[N], temp[N];bool v[N];int main() {    scanf(&quot;%d&quot;, &amp;n);    for (int i = 1; i &lt;= n; ++i)        scanf(&quot;%d&quot;, &amp;a[i]);    scanf(&quot;%d&quot;, &amp;m);    for (int i = 1; i &lt;= m; ++i)        scanf(&quot;%d&quot;, &amp;b[i]);    sort(b + 1, b + m + 1);    for (int i = 1; i &lt;= n; ++i)        if (~a[i]) {            int j = lower_bound(c + 1, c + len + 1, a[i]) - c;            pre[i] = from[j - 1];            from[j] = i;            c[j] = a[i];            if (len &lt; j) len = j;        } else {            int j = 1;            for (int k = 1; k &lt;= m; ++k) {                while (j &lt;= len &amp;&amp; c[j] &lt; b[k]) ++j;                temp[k] = j;            }            if (len &lt; j) len = j;            for (int k = m; k; --k) {                c[temp[k]] = b[k];                from[temp[k]] = from[temp[k] - 1];            }        }    int cnt = 0;    for (int i = from[len]; i; i = pre[i])        temp[++cnt] = i;    temp[0] = n + 1;    temp[cnt + 1] = 0;    a[n + 1] = INF;    for (int i = cnt + 1; i; --i) {        int last = a[temp[i]];        for (int j = temp[i] + 1; j &lt; temp[i - 1]; ++j)            if (!~a[j]) {                int k = upper_bound(b + 1, b + m + 1, last) - b;                if (k &gt; m || b[k] &gt;= a[temp[i - 1]]) break;                last = a[j] = b[k];                v[k] = 1;            }    }    for (int i = 1, j = 1; i &lt;= n; ++i)        if (!~a[i]) {            while (j &lt; m &amp;&amp; v[j]) ++j;            a[i] = b[j];            v[j] = 1;        }    //cerr &lt;&lt; len &lt;&lt; endl;    for (int i = 1; i &lt;= n; ++i)        printf(&quot;%d &quot;, a[i]);    putchar(&#39;\n&#39;);    return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt; 最长上升子序列（longest increasing subsequence） &lt;/strong&gt;，是动态规划中一个经典的问题。&lt;br&gt;定义如下：对于一个序列$A_1 \cdots A_i \cdots A_n$，子序列$A_{b_1} \cdots A_
      
    
    </summary>
    
      <category term="算法" scheme="http://tkandi.github.io/categories/algorithm/"/>
    
    
      <category term="DP" scheme="http://tkandi.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>NOIP2017初赛准备</title>
    <link href="http://tkandi.github.io/2017/10/14/NOIP2017%E5%88%9D%E8%B5%9B%E5%87%86%E5%A4%87/"/>
    <id>http://tkandi.github.io/2017/10/14/NOIP2017初赛准备/</id>
    <published>2017-10-14T02:50:00.000Z</published>
    <updated>2017-10-15T05:40:14.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NOIP2007提高组初赛"><a href="#NOIP2007提高组初赛" class="headerlink" title="NOIP2007提高组初赛"></a>NOIP2007提高组初赛</h1><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="一、单项选择题"><a href="#一、单项选择题" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><p>2．在关系数据库中，存放在数据库中的数据的逻辑结构以（ ）为主。<br>A. 二叉树  B. 多叉树  C. 哈希表  D. B+树  E. 二维表</p><p>5．在C++语言中，表达式23|2^5的值是（ ）<br>A. 23  B. 1  C. 18  D. 32  E. 24</p><h3 id="二、不定项选择题"><a href="#二、不定项选择题" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><p>16.在下列各软件中，属于NOIP 竞赛（复赛）推荐使用的语言环境有（ ）。<br>A. gcc B. g++  C. Turbo C  D. free pascal</p><h3 id="三、问题求解"><a href="#三、问题求解" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><p>2．N个人在操场里围成一圈，将这N个人按顺时针方向从1到N编号，然后，从第一个人起，每隔一个人让下一个人离开操场，显然，第一轮过后，具有偶数编号的人都离开了操场。依次做下去，直到操场只剩下一个人，记这个人的编号为J(N)，例如，J(5)=3，J(10)=5，等等。则J(400)=<strong><strong><strong>__</strong></strong></strong>。<br>（提示：对 N=2^m+r进行分析，其中 0≤r&lt;2^m）。</p><h3 id="四、阅读程序写结果"><a href="#四、阅读程序写结果" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><p>2.</p><pre><code class="lang-cpp">#include &lt;iostream&gt;using namespace std;void fun(int *a, int *b) {    int *k;    k = a;    a = b;    b = k;    return;}int main() {    int a = 3, b = 6, *x = &amp;a, *y = &amp;b;    fun(x, y);    cout &lt;&lt; &quot;No.1:&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; &quot; &quot;;    fun(&amp;a, &amp;b);    cout &lt;&lt; &quot;No.2:&quot; &lt;&lt; a &lt;&lt; &quot;,&quot; &lt;&lt; b &lt;&lt; endl;    return 0;}</code></pre><h3 id="五、完善程序"><a href="#五、完善程序" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><h3 id="一、单项选择题-1"><a href="#一、单项选择题-1" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><ol><li>$E$</li></ol><p>数据库有层次型数据库，关系型数据库，网状数据库。层次是树，关系是二维表，网状是链接指针。</p><ol><li>$A$</li></ol><p>|优先级比^低，所以23|2^5=23|(2^5)。</p><h3 id="二、不定项选择题-1"><a href="#二、不定项选择题-1" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><ol><li>$ABD$</li></ol><h3 id="三、问题求解-1"><a href="#三、问题求解-1" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><ol><li>$289$</li></ol><h3 id="四、阅读程序写结果-1"><a href="#四、阅读程序写结果-1" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><ol><li>$No.1:3,6 No.2:3,6$</li></ol><h3 id="五、完善程序-1"><a href="#五、完善程序-1" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><h1 id="NOIP2008提高组初赛"><a href="#NOIP2008提高组初赛" class="headerlink" title="NOIP2008提高组初赛"></a>NOIP2008提高组初赛</h1><h2 id="错题-1"><a href="#错题-1" class="headerlink" title="错题"></a>错题</h2><h3 id="一、单项选择题-2"><a href="#一、单项选择题-2" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><ol><li><p>在以下各项中，（  ）不是操作系统软件。<br>A. Solaris  B. Linux  C. Sybase  D. Windows Vista  E. Symbian</p></li><li><p>TCP/IP是一组构成互联网基础的网络协议，字面上包括两组协议：传输控制协议（TCP）和网际协议（IP）。TCP/IP 协议把Internet网络系统描述成具有四个层次功能的网络模型,其中提供源节点和目的节点之间的信息传输服务，包括寻址和路由器选择等功能的是（）。<br>A. 链路层  B. 网络层  C. 传输层  D. 应用层  E. 会话层</p></li></ol><h3 id="二、不定项选择题-2"><a href="#二、不定项选择题-2" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><p>14．Web2.0是近年来互联网的热门概念之一，其核心思想是互动与分享。下列网站中，（   ）是典型的Web2.0应用。<br>A. Sina   B. Flickr  C. Yahoo  D. Google</p><ol><li><p>面向对象程序设计（Object-Oriented Programming）是一种程序设计的方法论，它将对象作为程序的基本单元，将数据和程序封装在对象中，以提高软件的重用性、灵活性和扩展性。下面关于面向对象程序设计的说法中，正确的是（   ）。<br>A. 面向对象程序设计通常采用自顶向下设计方法进行设计。<br>B. 面向对象程序设计方法具有继承性（inheritance）、封装性（encapsulation）、多态性（polymorphism）等几大特点。<br>C. 支持面向对象特性的语言称为面向对象的编程语言，目前较为流行的有C++、JAVA、C#等。<br>D. 面向对象的程序设计的雏形来自于Simula语言，后来在SmallTalk语言的完善和标准化的过程中得到更多的扩展和对以前思想的重新注解。至今，SmallTalk语言仍然被视为面向对象语言的基础。</p></li><li><p>NOIP竞赛推荐使用的语言环境有（   ）。<br>A. Dev-C++  B. Visual C++  C. free pascal  D. Lazarus</p></li></ol><h3 id="三、问题求解-2"><a href="#三、问题求解-2" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-2"><a href="#四、阅读程序写结果-2" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h2 id="五、完善程序-2"><a href="#五、完善程序-2" class="headerlink" title="五、完善程序"></a>五、完善程序</h2><h2 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h2><h3 id="一、单项选择题-3"><a href="#一、单项选择题-3" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><ol><li><p>$C$<br>Solaris：Sun Microsystems研发的计算机操作系统。<br>Linux：是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。<br>Sybase：美国Sybase公司研制的一种关系型数据库系统，是一种典型的UNIX或WindowsNT平台上客户机/服务器环境下的大型数据库系统。<br>Windows Vista：Microsoft Windows操作系统，Windows XP的下一个版本。<br>Symbian：Symbian系统是塞班公司为手机而设计的操作系统。</p></li><li><p>$B$<br>TCP/IP协议：Transmission Control Protocol/Internet Protocol的简写，中译名为传输控制协议/因特网互联协议，又名网络通讯协议，是Internet最基本的协议、Internet国际互联网络的基础，由网络层的IP协议和传输层的TCP协议组成。</p></li></ol><h3 id="二、不定项选择题-3"><a href="#二、不定项选择题-3" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><ol><li>$B$</li></ol><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">Web 1.0</th><th style="text-align:center">Web 2.0</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">DoubleClick</td><td style="text-align:center">Google AdSense</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Ofoto</td><td style="text-align:center">Flickr</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Akamai</td><td style="text-align:center">Wikipedia</td></tr><tr><td style="text-align:center">etc.</td><td style="text-align:center">etc.</td><td style="text-align:center">etc.</td></tr></tbody></table></div><h3 id="三、问题求解-3"><a href="#三、问题求解-3" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-3"><a href="#四、阅读程序写结果-3" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h3 id="五、完善程序-3"><a href="#五、完善程序-3" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><h1 id="NOIP2009提高组初赛"><a href="#NOIP2009提高组初赛" class="headerlink" title="NOIP2009提高组初赛"></a>NOIP2009提高组初赛</h1><h2 id="错题-2"><a href="#错题-2" class="headerlink" title="错题"></a>错题</h2><h3 id="一、单项选择题-4"><a href="#一、单项选择题-4" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><h3 id="二、不定项选择题-4"><a href="#二、不定项选择题-4" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><h3 id="三、问题求解-4"><a href="#三、问题求解-4" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-4"><a href="#四、阅读程序写结果-4" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h3 id="五、完善程序-4"><a href="#五、完善程序-4" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><h2 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h2><h3 id="一、单项选择题-5"><a href="#一、单项选择题-5" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><h3 id="二、不定项选择题-5"><a href="#二、不定项选择题-5" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><h3 id="三、问题求解-5"><a href="#三、问题求解-5" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-5"><a href="#四、阅读程序写结果-5" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h3 id="五、完善程序-5"><a href="#五、完善程序-5" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><p>Templete</p><h1 id="NOIP20提高组初赛"><a href="#NOIP20提高组初赛" class="headerlink" title="NOIP20提高组初赛"></a>NOIP20提高组初赛</h1><h2 id="错题-3"><a href="#错题-3" class="headerlink" title="错题"></a>错题</h2><h3 id="一、单项选择题-6"><a href="#一、单项选择题-6" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><h3 id="二、不定项选择题-6"><a href="#二、不定项选择题-6" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><h3 id="三、问题求解-6"><a href="#三、问题求解-6" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-6"><a href="#四、阅读程序写结果-6" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h3 id="五、完善程序-6"><a href="#五、完善程序-6" class="headerlink" title="五、完善程序"></a>五、完善程序</h3><h2 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h2><h3 id="一、单项选择题-7"><a href="#一、单项选择题-7" class="headerlink" title="一、单项选择题"></a>一、单项选择题</h3><h3 id="二、不定项选择题-7"><a href="#二、不定项选择题-7" class="headerlink" title="二、不定项选择题"></a>二、不定项选择题</h3><h3 id="三、问题求解-7"><a href="#三、问题求解-7" class="headerlink" title="三、问题求解"></a>三、问题求解</h3><h3 id="四、阅读程序写结果-7"><a href="#四、阅读程序写结果-7" class="headerlink" title="四、阅读程序写结果"></a>四、阅读程序写结果</h3><h3 id="五、完善程序-7"><a href="#五、完善程序-7" class="headerlink" title="五、完善程序"></a>五、完善程序</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;NOIP2007提高组初赛&quot;&gt;&lt;a href=&quot;#NOIP2007提高组初赛&quot; class=&quot;headerlink&quot; title=&quot;NOIP2007提高组初赛&quot;&gt;&lt;/a&gt;NOIP2007提高组初赛&lt;/h1&gt;&lt;h2 id=&quot;错题&quot;&gt;&lt;a href=&quot;#错题&quot; cla
      
    
    </summary>
    
      <category term="NOIP初赛" scheme="http://tkandi.github.io/categories/NOIP-preliminary/"/>
    
    
      <category term="选择题" scheme="http://tkandi.github.io/tags/choice-question/"/>
    
      <category term="问题求解" scheme="http://tkandi.github.io/tags/problem-solving/"/>
    
  </entry>
  
  <entry>
    <title>BZOJ1968</title>
    <link href="http://tkandi.github.io/2017/09/25/BZOJ1968/"/>
    <id>http://tkandi.github.io/2017/09/25/BZOJ1968/</id>
    <published>2017-09-25T04:00:00.000Z</published>
    <updated>2017-10-18T11:59:40.920Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AHOI2005-COMMON-约数研究"><a href="#AHOI2005-COMMON-约数研究" class="headerlink" title="[AHOI2005]COMMON 约数研究"></a><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1968" target="_blank" rel="external">[AHOI2005]COMMON 约数研究</a></h1><p><center> Time Limit: 1 Sec  Memory Limit: 64 MB</center></p><h2 id="Description"><a href="#Description" class="headerlink" title=" Description "></a><strong> Description </strong></h2><blockquote><p>科学家们在 Samuel 星球上的探险得到了丰富的能源储备，这使得空间站中大型计算机 “Samuel II” 的长时间运算成为了可能。由于在去年一年的辛苦工作取得了不错的成绩，小联被允许用 “Samuel II” 进行数学研究。</p><p>小联最近在研究和约数有关的问题，他统计每个正数$N$的约数的个数，并以$f(N)$来表示。例如$12$的约数有$1$、$2$、$3$、$4$、$6$、$12$。因此$f(12)=6$。下表给出了一些$f(N)$的取值：</p></blockquote><div class="table-container"><table><thead><tr><th>$n$</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th></tr></thead><tbody><tr><td>$f(n)$</td><td>1</td><td>2</td><td>2</td><td>3</td><td>2</td><td>4</td></tr></tbody></table></div><blockquote><p>现在小联希望用 “Samuel II” 来统计$f(1)$到$f(n)$的累加和$M$。</p></blockquote><h2 id="Input"><a href="#Input" class="headerlink" title=" Input "></a><strong> Input </strong></h2><blockquote><p>只有一行一个整数$N$（$0 &lt; N &lt; 1000000$）。</p></blockquote><h2 id="Output"><a href="#Output" class="headerlink" title=" Output "></a><strong> Output </strong></h2><blockquote><p>只有一行输出，为整数$M$，即$f(1)$到$f(N)$的累加和。</p></blockquote><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title=" Sample Input "></a><strong> Sample Input </strong></h2><blockquote><p>3</p></blockquote><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title=" Sample Output "></a><strong> Sample Output </strong></h2><blockquote><p>5</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><blockquote><p>对于$i$，它会成为$i$,$i \times 2$,…,$i \times (n / i)$的因子，它对答案的贡献为$n / i$。</p></blockquote><h2 id="Standard"><a href="#Standard" class="headerlink" title=" Standard "></a><strong> Standard </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;int n, sum = 0;int main() {    scanf(&quot;%d&quot;, &amp;n);    for (int i = 1; i &lt;= n; ++i)        sum += n / i;    printf(&quot;%d\n&quot;, sum);    return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AHOI2005-COMMON-约数研究&quot;&gt;&lt;a href=&quot;#AHOI2005-COMMON-约数研究&quot; class=&quot;headerlink&quot; title=&quot;[AHOI2005]COMMON 约数研究&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.lydsy
      
    
    </summary>
    
      <category term="BZOJ" scheme="http://tkandi.github.io/categories/BZOJ/"/>
    
    
      <category term="数学" scheme="http://tkandi.github.io/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>BZOJ2463</title>
    <link href="http://tkandi.github.io/2017/09/23/BZOJ2463/"/>
    <id>http://tkandi.github.io/2017/09/23/BZOJ2463/</id>
    <published>2017-09-23T07:15:00.000Z</published>
    <updated>2017-10-18T11:59:15.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2463-中山市选2009-谁能赢呢？"><a href="#2463-中山市选2009-谁能赢呢？" class="headerlink" title="2463: [中山市选2009]谁能赢呢？"></a><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2463" target="_blank" rel="external">2463: [中山市选2009]谁能赢呢？</a></h1><p><center> Time Limit: 10 Sec  Memory Limit: 128 MB</center></p><h2 id="Description"><a href="#Description" class="headerlink" title=" Description "></a><strong> Description </strong></h2><blockquote><p>小明和小红经常玩一个博弈游戏。给定一个$n \times n$的棋盘，一个石头被放在棋盘的左上角。他们轮流移动石头。每一回合，选手只能把石头向上，下，左，右四个方向移动一格，并且要求移动到的格子之前不能被访问过。谁不能移动石头了就算输。假如小明先移动石头，而且两个选手都以最优策略走步，问最后谁能赢？</p></blockquote><h2 id="Input"><a href="#Input" class="headerlink" title=" Input "></a><strong> Input </strong></h2><blockquote><p>输入文件有多组数据。</p><p>输入第一行包含一个整数$n$，表示棋盘的规模。</p><p>当输入$n$为$0$时，表示输入结束。</p></blockquote><h2 id="Output"><a href="#Output" class="headerlink" title=" Output "></a><strong> Output </strong></h2><blockquote><p>对于每组数据，如果小明最后能赢，则输出 “Alice”, 否则输出 “Bob”, 每一组答案独占一行。</p></blockquote><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title=" Sample Input "></a><strong> Sample Input </strong></h2><blockquote><p>2<br>0</p></blockquote><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title=" Sample Output "></a><strong> Sample Output </strong></h2><blockquote><p>Alice</p></blockquote><h2 id="HINT"><a href="#HINT" class="headerlink" title=" HINT "></a><strong> HINT </strong></h2><blockquote><p>对于所有的数据，保证$1 &lt;= n &lt;= 10000$。</p></blockquote><h2 id="Solution"><a href="#Solution" class="headerlink" title=" Solution "></a><strong> Solution </strong></h2><blockquote><p>当$n$为偶数，棋盘一定能被$1 \times 2$的骨牌覆盖，所以我们先对棋盘进行覆盖，Alice 移动的每一步为原位置所在骨牌的另一块，Bob 则必须选择新的一块骨牌，所以最后一定是 Bob 找不到一块新的骨牌。Alice 必胜。</p><p>当$n$为奇数，棋盘上除去起点的点一定能被$1 \times 2$的骨牌覆盖，所以我们先对棋盘进行覆盖，Alice 每次进入一块新的骨牌，Bob 移动的每一步为原位置所在骨牌的另一块，所以最后一定是 Alice 找不到一块新的骨牌。Bob 必胜。</p></blockquote><h2 id="Standard"><a href="#Standard" class="headerlink" title=" Standard "></a><strong> Standard </strong></h2><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;int n;int main() {    while (scanf(&quot;%d&quot;, &amp;n) == 1 &amp;&amp; n) {        if (n &amp; 1) puts(&quot;Bob&quot;);        else puts(&quot;Alice&quot;);    }    return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2463-中山市选2009-谁能赢呢？&quot;&gt;&lt;a href=&quot;#2463-中山市选2009-谁能赢呢？&quot; class=&quot;headerlink&quot; title=&quot;2463: [中山市选2009]谁能赢呢？&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.lydsy.c
      
    
    </summary>
    
      <category term="BZOJ" scheme="http://tkandi.github.io/categories/BZOJ/"/>
    
    
      <category term="博弈" scheme="http://tkandi.github.io/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>Hello World!</title>
    <link href="http://tkandi.github.io/2017/09/23/Hello%20World!/"/>
    <id>http://tkandi.github.io/2017/09/23/Hello World!/</id>
    <published>2017-09-23T07:00:00.000Z</published>
    <updated>2017-10-15T05:38:22.692Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇有关 <strong><em> OI </em></strong> 的博客。</p><pre><code class="lang-cpp">#include &lt;iostream&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;using namespace std;int main() {    puts(&quot;Hello World!&quot;);    return 0;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是一篇有关 &lt;strong&gt;&lt;em&gt; OI &lt;/em&gt;&lt;/strong&gt; 的博客。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-cpp&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt
      
    
    </summary>
    
    
  </entry>
  
</feed>
